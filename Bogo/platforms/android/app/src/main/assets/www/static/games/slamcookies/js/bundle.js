var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var RootView_1 = require("./views/RootView");
var MessageProxy_1 = require("./MessageProxy");
var Main = /** @class */ (function () {
    function Main() {
        this.stageWidth = 720;
        this.stageHeight = 1440;
        Config.isAlpha = true;
        Laya.init(this.stageWidth, this.stageHeight); // Laya["WebGL"]);
        Laya.stage.bgColor = "#23b1ef";
        // Config.isAntialias=true;
        //Laya["Physics"] && Laya["Physics"].enable();
        //Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = Laya.Stage.SCALE_NOBORDER;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        /**画布水平居中对齐。*/
        Laya.stage.alignH = Laya.Stage.ALIGN_CENTER;
        Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        //if (GameConfig.debug || Laya.Utils.getQueryString("debug") == "true") Laya.enableDebugPanel();
        //if (GameConfig.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
        //if (GameConfig.stat) Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        Laya.stage.screenAdaptationEnabled = false;
        MessageProxy_1.MessageProxy.Instance().InitProxy();
        this.rootView = new RootView_1.RootView();
        Laya.stage.addChild(this.rootView);
        // this.rootView.init();
        // Laya.Stat.show(0,0);
    };
    return Main;
}());
//激活启动类
//激活启动类
exports.game = new Main();
},{"./GameConfig":1,"./MessageProxy":3,"./views/RootView":12}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Browser = Laya.Browser;
var PlayerData_1 = require("./model/PlayerData");
var MessageProxy = /** @class */ (function () {
    function MessageProxy() {
        //this.InitProxy();
    }
    MessageProxy.Instance = function () {
        if (this.s_instance == null) {
            this.s_instance = new MessageProxy();
        }
        return this.s_instance;
    };
    ;
    MessageProxy.prototype.SetGameView = function (view) {
        this._view = view;
    };
    MessageProxy.prototype.InitProxy = function () {
        var self = this;
        Browser.window.addEventListener('message', function (event) {
            // console.log('receive message listener' );
            self.OnReceiveMessage(event.data);
        });
        this._users = [];
    };
    MessageProxy.prototype.PostMessage = function (data) {
        if (Browser.window.parent) {
            Browser.window.parent.postMessage(data, "*");
        }
    };
    // SendPostScore( score )  {
    //     this.PostMessage({
    //         cmd:"SendGameData",
    //         data : score
    //     })
    // }
    MessageProxy.prototype.SendPostScore = function (score, uid) {
        this.PostMessage({
            cmd: "SendGameData",
            data: score,
            uid: uid
        });
    };
    MessageProxy.prototype.SendGameReady = function () {
        this.PostMessage({
            cmd: "GameLoadReady"
        });
    };
    MessageProxy.prototype.SendGameOver = function () {
        this.PostMessage({
            cmd: "GameOver"
        });
    };
    MessageProxy.prototype.AddListenter = function (listener) {
        this._listener = listener;
    };
    MessageProxy.prototype.RemoveListener = function () {
        this._listener = null;
    };
    MessageProxy.prototype.OnReceiveMessage = function (message) {
        // console.log('on receive message');
        // console.log(message );
        var self = this;
        switch (message.cmd) {
            case 'Broadcast':
                {
                    var data = JSON.parse(message.data.data);
                    // console.log("Broadcast userId: "+data.userId+" dice "+data.dice);
                    if (message.data.userId == self._users[0].userId) { //用户自己发送添加的块的返回不处理
                        // this._view.event('IS_ROBOTE_EVENT', [this._view])
                    }
                    else {
                        if (data.type == "addNum") { //收到对方添加的块 
                            this._view.addBlockContainerByOppo(data.dice);
                        }
                    }
                }
                break;
            case 'UpdateData':
                {
                    if (self._users.length == 2) {
                        if (message.data.userId == self._users[0].userId) {
                            if (this._view) //user lose 
                             {
                                this._view.UpdateScoreData(0, message.data.userScore);
                                // this._view.UpdateScoreData(1, 1);
                            }
                        }
                        else {
                            if (this._view) //oppo win 
                             {
                                // this._view.UpdateScoreData(0, message.data.userScore);
                                this._view.UpdateScoreData(1, 1);
                            }
                        }
                    }
                }
                break;
            case "GameResult":
                {
                    if (this._view) {
                        this._view.ShowResult(message.data);
                    }
                }
                break;
            case "GameBegin":
                {
                    // console.log(message.data);
                    self._users = message.data;
                    if (this._view) {
                        // console.log('set view data  ');
                        if (message.data[1].isRobot == 1) {
                            PlayerData_1.PlayerData.Instance().setIsOppoRobote(true);
                            PlayerData_1.PlayerData.Instance().setOppositeId(message.data[1].userId);
                            this._view.event('IS_ROBOTE_EVENT', [this._view]);
                        }
                        this._view.SetUserData(0, message.data[0]);
                        this._view.SetUserData(1, message.data[1]);
                    }
                    else {
                        // console.log('view is not create ');
                    }
                }
            default:
                break;
        }
        if (self._listener) {
            // console.log('call back listener ');
            self._listener(message.data);
        }
    };
    MessageProxy.prototype.postBlockAddToOppo = function (addNum) {
        // console.log("postBlockAddToOppo  :"+addNum);
        // console.log("postBlockAddToOppo id :"+PlayerData.Instance().getUserId());
        this.PostMessage({
            cmd: "BroadCastData",
            uid: PlayerData_1.PlayerData.Instance().getUserId(),
            data: {
                type: "addNum",
                dice: addNum,
                userId: PlayerData_1.PlayerData.Instance().getUserId(),
            },
        });
    };
    return MessageProxy;
}());
exports.MessageProxy = MessageProxy;
},{"./model/PlayerData":6}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BlockItem_1 = require("./BlockItem");
var MathTools_1 = require("../utils/MathTools");
//block类型枚举
var BlockEnum;
(function (BlockEnum) {
    BlockEnum[BlockEnum["Block_Cake"] = 0] = "Block_Cake";
    BlockEnum[BlockEnum["Block_Chocolate"] = 1] = "Block_Chocolate";
})(BlockEnum || (BlockEnum = {}));
//随机生成3个
var BlockContainer = /** @class */ (function (_super) {
    __extends(BlockContainer, _super);
    function BlockContainer() {
        var _this = _super.call(this) || this;
        _this.blockExplodeFlag = false; //是chocolate 判断是否拼过
        _this.blockPosArr = [];
        _this.RandomBlockPosArr = [];
        _this.GenerateBlockRandom = [
            [0, 1, 2], [0, 1, 3], [0, 2, 3], [1, 2, 3]
        ];
        _this.centerX = 0;
        _this.y = -120;
        return _this;
    }
    BlockContainer.prototype.getBolockExplodeFlag = function () {
        return this.blockExplodeFlag;
    };
    BlockContainer.prototype.setBlockExplodeFlag = function (flag) {
        this.blockExplodeFlag = flag;
    };
    BlockContainer.prototype.initBlockContainer = function () {
        this.getPieceStyle();
        this.initBlockItem();
        this.initContainerMove();
    };
    BlockContainer.prototype.initClickBlockContainer = function () {
        this.blockType = BlockEnum.Block_Cake;
        this.blockSkin = "game/block_cake.png";
        this.initBlockItem();
        this.initContainerMove();
    };
    BlockContainer.prototype.getPieceStyle = function () {
        var randomNum = MathTools_1.MathTools.randomNum(0, 3);
        switch (randomNum) {
            case 0:
            case 1:
            case 2:
                this.blockType = BlockEnum.Block_Cake;
                this.blockSkin = "game/block_cake.png";
                break;
            case 3:
                this.blockType = BlockEnum.Block_Chocolate;
                this.blockSkin = "game/block_chocolate.png";
                break;
            default:
                break;
        }
    };
    BlockContainer.prototype.initBlockItem = function () {
        this.blockItem0 = new BlockItem_1.BlockItem(this.blockType, this.blockSkin);
        this.block_pos0.addChild(this.blockItem0);
        this.blockItem1 = new BlockItem_1.BlockItem(this.blockType, this.blockSkin);
        this.block_pos1.addChild(this.blockItem1);
        this.blockItem2 = new BlockItem_1.BlockItem(this.blockType, this.blockSkin);
        this.block_pos2.addChild(this.blockItem2);
        this.blockItem3 = new BlockItem_1.BlockItem(this.blockType, this.blockSkin);
        this.block_pos3.addChild(this.blockItem3);
    };
    BlockContainer.prototype.initContainerMove = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        // Laya.timer.frameLoop(1,this,this.judgeIsBottom,[]);
    };
    BlockContainer.prototype.resetContainerMove = function (speed) {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
    };
    BlockContainer.prototype.addContainerY = function (moveY) {
        this.y += moveY;
    };
    BlockContainer.prototype.judgeIsBottom = function () {
        var isPeng = false;
        if (this.y >= 800 && this.y < 1280) {
            isPeng = true;
        }
        else {
            isPeng = false;
        }
        if (isPeng) {
            this.event('CONTAINER_REACH_BOTTOM_EVENT', [this]);
        }
        return isPeng;
    };
    BlockContainer.prototype.frameLoopMove = function (index) {
        if (!this.judgeIsBottom()) {
        }
    };
    BlockContainer.prototype.getBlockPosArr = function () {
        return this.blockPosArr;
    };
    //正常生成不是用户点击创建
    BlockContainer.prototype.generateBlockItemContainer = function () {
        var num = MathTools_1.MathTools.randomNum(0, 3);
        this.RandomBlockPosArr = this.GenerateBlockRandom[MathTools_1.MathTools.randomNum(0, 3)];
        this.blockPosArr = this.RandomBlockPosArr;
        this.foreachBlockItems();
        return this;
    };
    //非正常生成 用户点击创建
    BlockContainer.prototype.generateBlockItemContainerByClick = function (index) {
        var oriArr = [];
        oriArr.push(index);
        this.RandomBlockPosArr = oriArr;
        this.blockPosArr = this.RandomBlockPosArr;
        this.foreachBlockItems();
        return this;
    };
    BlockContainer.prototype.foreachBlockItems = function () {
        for (var i = 0; i < this.blockPosArr.length; i++) {
            switch (this.blockPosArr[i]) {
                case 0:
                    this.block_pos0.visible = true;
                    break;
                case 1:
                    this.block_pos1.visible = true;
                    break;
                case 2:
                    this.block_pos2.visible = true;
                    break;
                case 3:
                    this.block_pos3.visible = true;
                    break;
                default:
                    break;
            }
        }
    };
    BlockContainer.prototype.addMissBlockByIndex = function (index) {
        if (this.isNeedSplit()) {
            this.setBlockExplodeFlag(true);
            this.playChocolateAni();
            return this;
        }
        this.RandomBlockPosArr.push(index);
        this.RandomBlockPosArr = this.RandomBlockPosArr.sort();
        this.blockPosArr = this.RandomBlockPosArr;
        this.foreachBlockItems();
        return this;
    };
    BlockContainer.prototype.isContainerIsMissing = function () {
        return this.blockPosArr.length < 4;
    };
    BlockContainer.prototype.isBlockChocolate = function () {
        return this.blockType == BlockEnum.Block_Chocolate;
    };
    BlockContainer.prototype.isNeedSplit = function () {
        return this.isBlockChocolate() && !this.getBolockExplodeFlag();
    };
    BlockContainer.prototype.playChocolateAni = function () {
        if (this.getBolockExplodeFlag()) {
            Laya.SoundManager.playSound("sound/splite.mp3", 1);
            this.blockItem0.doChocolateSplitEffect();
            this.blockItem1.doChocolateSplitEffect();
            this.blockItem2.doChocolateSplitEffect();
            this.blockItem3.doChocolateSplitEffect();
        }
    };
    BlockContainer.prototype.playExplodeAni = function () {
        if (this.isBlockChocolate()) {
            if (this.getBolockExplodeFlag()) {
                Laya.SoundManager.playSound("sound/burst.mp3", 1);
                this.blockItem0.doChocolateBurstEffect();
                this.blockItem1.doChocolateBurstEffect();
                this.blockItem2.doChocolateBurstEffect();
                this.blockItem3.doChocolateBurstEffect();
            }
        }
        else {
            Laya.SoundManager.playSound("sound/burst.mp3", 1);
            this.blockItem0.doCakeBurstEffect();
            this.blockItem1.doCakeBurstEffect();
            this.blockItem2.doCakeBurstEffect();
            this.blockItem3.doCakeBurstEffect();
        }
    };
    BlockContainer.prototype.onDestory = function () {
        var _this = this;
        Laya.timer.once(240, this, function () {
            _this.doDestroy();
        });
    };
    BlockContainer.prototype.doDestroy = function () {
        this.visible = false;
        this.RandomBlockPosArr = [];
        this.blockPosArr = [];
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        this.removeChildren();
        this.destroyChildren();
    };
    return BlockContainer;
}(layaMaxUI_1.ui.BlockContainerViewUI));
exports.BlockContainer = BlockContainer;
},{"../ui/layaMaxUI":7,"../utils/MathTools":9,"./BlockItem":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
//block类型枚举
var BlockEnum;
(function (BlockEnum) {
    BlockEnum[BlockEnum["Block_Cake"] = 0] = "Block_Cake";
    BlockEnum[BlockEnum["Block_Chocolate"] = 1] = "Block_Chocolate";
})(BlockEnum || (BlockEnum = {}));
var BlockItem = /** @class */ (function (_super) {
    __extends(BlockItem, _super);
    function BlockItem(blockType, blockSkin) {
        var _this = _super.call(this) || this;
        _this.blockType = blockType;
        _this.blockSkin = blockSkin;
        _this.splite_ani.interval = 20;
        _this.item_ani.interval = 20;
        _this.updateBlockSkin();
        return _this;
    }
    BlockItem.prototype.getBlockType = function () {
        return this.blockType;
    };
    BlockItem.prototype.setBlockType = function (type) {
        this.blockType = type;
    };
    BlockItem.prototype.getBlockSkin = function () {
        return this.blockSkin;
    };
    BlockItem.prototype.setBlockSkin = function (skin) {
        this.blockSkin = skin;
    };
    BlockItem.prototype.updateBlockSkin = function () {
        this.item_bg.loadImage(this.getBlockSkin());
    };
    BlockItem.prototype.clearBolckItem = function () {
        this.visible = false;
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
    };
    BlockItem.prototype.doCakeBurstEffect = function () {
        this.item_ani.loadAtlas("res/atlas/bingan.atlas", Laya.Handler.create(this, this.burstEffect, ["bingan", 1, 16]));
        // this.item_ani.loadAtlas("res/atlas/cake.atlas",Laya.Handler.create(this,this.burstEffect,["cake",1,6]));
    };
    BlockItem.prototype.doChocolateSplitEffect = function () {
        this.splite_ani.loadAtlas("res/atlas/chocolate.atlas", Laya.Handler.create(this, this.splitEffect, ["chocolate", 1, 3]));
    };
    BlockItem.prototype.doChocolateBurstEffect = function () {
        var _this = this;
        Laya.timer.once(40, this, function () {
            _this.item_bg.visible = false;
        });
        this.item_ani.loadAtlas("res/atlas/qiaokeli.atlas", Laya.Handler.create(this, this.burstEffect, ["qiaokeli", 1, 16]));
        // this.item_ani.loadAtlas("res/atlas/chocolate.atlas",Laya.Handler.create(this,this.burstEffect,["chocolate",4,9]));
    };
    BlockItem.prototype.burstEffect = function (name, startPos, endPos) {
        var _this = this;
        this.splite_ani.visible = false;
        this.item_ani.visible = true;
        Laya.timer.once(50, this, function () {
            _this.item_bg.visible = false;
        });
        Laya.Animation.createFrames(this.aniUrls(name, startPos, endPos), "burst");
        this.item_ani.play(startPos, false, "burst");
        this.item_ani.visible = true;
        Laya.timer.once(320, this, function () {
            _this.item_ani.visible = false;
        });
    };
    BlockItem.prototype.splitEffect = function (name, startPos, endPos) {
        var _this = this;
        this.item_ani.visible = false;
        this.splite_ani.visible = true;
        Laya.timer.once(50, this, function () {
            _this.item_bg.visible = false;
        });
        Laya.Animation.createFrames(this.aniSplitsUrls(name, startPos, endPos), "burst");
        this.splite_ani.play(startPos, false, "burst");
    };
    /**
     * 创建一组动画的url数组
     * @param aniName  动作的名称，用于生成url
     * @param length   动画最后一帧的索引值，
     */
    BlockItem.prototype.aniUrls = function (aniName, startPos, endPos) {
        var urls = [];
        for (var i = startPos; i <= endPos; i++) {
            if (i < 10) {
                urls.push(aniName + "/1000" + i + ".png");
            }
            else {
                urls.push(aniName + "/100" + i + ".png");
            }
        }
        return urls;
    };
    BlockItem.prototype.aniSplitsUrls = function (aniName, startPos, endPos) {
        var urls = [];
        for (var i = startPos; i <= endPos; i++) {
            if (i < 10) {
                urls.push(aniName + "/ani0" + i + ".png");
            }
            else {
                urls.push(aniName + "/ani" + i + ".png");
            }
        }
        return urls;
    };
    return BlockItem;
}(layaMaxUI_1.ui.BlockItemUI));
exports.BlockItem = BlockItem;
},{"../ui/layaMaxUI":7}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerData = /** @class */ (function () {
    function PlayerData() {
        this.bottomLine = 900;
        //分数
        this.user_name = "User";
        this.opposite_name = "User";
        this.user_id = 0;
        this.opposite_id = 0;
        this.isOppoRobote = false;
        this.game_result = 0;
        //分数 来判断胜利失败
        this.user_score = 0;
        this.opposite_score = 0;
    }
    PlayerData.Instance = function () {
        if (this.s_instance == null) {
            this.s_instance = new PlayerData();
        }
        return this.s_instance;
    };
    ;
    PlayerData.prototype.setBottomLine = function (num) {
        this.bottomLine = num;
    };
    PlayerData.prototype.getBottomLine = function () {
        return this.bottomLine;
    };
    PlayerData.prototype.setIsOppoRobote = function (robote) {
        this.isOppoRobote = robote;
    };
    PlayerData.prototype.getIsOppoRobote = function () {
        return this.isOppoRobote;
    };
    PlayerData.prototype.setUserScore = function (sco) {
        this.user_score = sco;
    };
    PlayerData.prototype.addUserScore = function (sco) {
        this.user_score += sco;
    };
    PlayerData.prototype.getOppositeScore = function () {
        return this.opposite_score;
    };
    PlayerData.prototype.setOppositeScore = function (sco) {
        this.opposite_score = sco;
    };
    PlayerData.prototype.setUserId = function (ret) {
        this.user_id = ret;
    };
    PlayerData.prototype.getUserId = function () {
        return this.user_id;
    };
    PlayerData.prototype.setOppositeId = function (ret) {
        this.opposite_id = ret;
    };
    PlayerData.prototype.getOppositeId = function () {
        return this.opposite_id;
    };
    PlayerData.prototype.setGameResult = function (ret) {
        this.game_result = ret;
    };
    PlayerData.prototype.getGameResult = function () {
        return this.game_result;
    };
    PlayerData.prototype.getUserName = function () {
        return this.user_name;
    };
    PlayerData.prototype.setUserName = function (name) {
        this.user_name = name;
    };
    PlayerData.prototype.getOppositeName = function () {
        return this.opposite_name;
    };
    PlayerData.prototype.setOppositeName = function (name) {
        this.opposite_name = name;
    };
    return PlayerData;
}());
exports.PlayerData = PlayerData;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var View = Laya.View;
var ui;
(function (ui) {
    var BlockContainerViewUI = /** @class */ (function (_super) {
        __extends(BlockContainerViewUI, _super);
        function BlockContainerViewUI() {
            return _super.call(this) || this;
        }
        BlockContainerViewUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(BlockContainerViewUI.uiView);
        };
        BlockContainerViewUI.uiView = { "type": "View", "props": { "width": 660 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "visible": false, "var": "block_pos0" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 0, "x": 164, "visible": false, "var": "block_pos1" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 0, "x": 328, "visible": false, "var": "block_pos2" }, "compId": 5 }, { "type": "Sprite", "props": { "y": 0, "x": 492, "visible": false, "var": "block_pos3" }, "compId": 6 }], "loadList": [], "loadList3D": [] };
        return BlockContainerViewUI;
    }(View));
    ui.BlockContainerViewUI = BlockContainerViewUI;
    var BlockItemUI = /** @class */ (function (_super) {
        __extends(BlockItemUI, _super);
        function BlockItemUI() {
            return _super.call(this) || this;
        }
        BlockItemUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(BlockItemUI.uiView);
        };
        BlockItemUI.uiView = { "type": "View", "props": { "width": 1, "height": 1 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "x": 0, "width": 165, "var": "item_bg", "texture": "game/block_cake.png", "pivotX": 0.9, "height": 110 }, "compId": 3 }, { "type": "Animation", "props": { "y": -103, "x": -96, "var": "item_ani" }, "compId": 4 }, { "type": "Animation", "props": { "x": -5, "var": "splite_ani", "pivotX": 0.9 }, "compId": 11 }], "loadList": ["game/block_cake.png"], "loadList3D": [] };
        return BlockItemUI;
    }(View));
    ui.BlockItemUI = BlockItemUI;
    var GameEndViewUI = /** @class */ (function (_super) {
        __extends(GameEndViewUI, _super);
        function GameEndViewUI() {
            return _super.call(this) || this;
        }
        GameEndViewUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameEndViewUI.uiView);
        };
        GameEndViewUI.uiView = { "type": "View", "props": { "width": 720, "height": 1440 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 650, "x": 359, "width": 1, "var": "box_container", "pivotY": 450, "pivotX": 360, "height": 1 }, "compId": 3 }], "loadList": [], "loadList3D": [] };
        return GameEndViewUI;
    }(View));
    ui.GameEndViewUI = GameEndViewUI;
    var GameMainUI = /** @class */ (function (_super) {
        __extends(GameMainUI, _super);
        function GameMainUI() {
            return _super.call(this) || this;
        }
        GameMainUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameMainUI.uiView);
        };
        GameMainUI.uiView = { "type": "View", "props": { "width": 720, "visible": true, "height": 1440 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "visible": true, "var": "game_topbg", "texture": "game/game_topbg.png", "scaleY": 1.35 }, "compId": 6 }, { "type": "Sprite", "props": { "y": 360, "x": 0, "var": "game_bodybg", "texture": "game/game_bodybg.png", "height": 1080 }, "compId": 25, "child": [{ "type": "Sprite", "props": { "y": 850, "x": 33.5, "width": 653, "var": "bottom_line", "texture": "game/bottom_line.png", "height": 20 }, "compId": 5 }, { "type": "Sprite", "props": { "y": 0, "x": 517, "width": 164, "visible": true, "var": "road3", "height": 930 }, "compId": 22 }, { "type": "Sprite", "props": { "y": 0, "x": 30, "width": 164, "visible": true, "var": "road0", "height": 930 }, "compId": 17 }, { "type": "Sprite", "props": { "y": 0, "x": 194, "width": 164, "visible": true, "var": "road1", "height": 930 }, "compId": 18 }, { "type": "Sprite", "props": { "y": 0, "x": 358, "width": 164, "visible": true, "var": "road2", "height": 930 }, "compId": 21 }, { "type": "Sprite", "props": { "y": -360, "x": 0, "width": 720, "visible": true, "var": "container_move", "height": 1446 }, "compId": 46 }] }, { "type": "Box", "props": { "y": 243, "width": 350, "visible": true, "var": "competitor_box", "right": 0, "height": 100 }, "compId": 11, "child": [{ "type": "Sprite", "props": { "y": 36, "x": -10, "var": "oppo_name", "texture": "game/score_bg2.png" }, "compId": 12, "child": [{ "type": "Label", "props": { "y": 32, "x": 120, "width": 155, "var": "oppoName", "valign": "middle", "text": "oppoName", "pivotY": 15, "pivotX": 78, "height": 30, "fontSize": 25, "color": "#fff", "bold": true, "align": "left" }, "compId": 35 }] }, { "type": "Sprite", "props": { "y": 10, "x": 170, "texture": "game/head_ring.png", "scaleY": 0.95, "scaleX": 0.95 }, "compId": 13, "child": [{ "type": "Sprite", "props": { "texture": "game/head_bg.png" }, "compId": 41 }, { "type": "Sprite", "props": { "y": -21, "x": -22, "visible": true, "var": "oppohead_add", "scaleY": 0.45, "scaleX": 0.45 }, "compId": 44 }] }, { "type": "Sprite", "props": { "y": 12, "x": 173, "width": 85, "var": "oppohead", "scaleY": 0.95, "scaleX": 0.95, "height": 85 }, "compId": 14, "child": [{ "type": "Sprite", "props": { "y": 10, "x": 10, "width": 78, "renderType": "mask", "height": 78 }, "compId": 36, "child": [{ "type": "Circle", "props": { "y": 33, "x": 33, "radius": 40, "lineWidth": 1, "fillColor": "#ff0c08" }, "compId": 37 }] }] }] }, { "type": "Box", "props": { "y": 243, "width": 350, "var": "user_box", "left": 0, "height": 100 }, "compId": 8, "child": [{ "type": "Sprite", "props": { "y": 36, "x": 140, "var": "user_name", "texture": "game/score_bg1.png" }, "compId": 7, "child": [{ "type": "Label", "props": { "y": 32, "x": 130, "width": 153, "var": "username", "text": "userName", "pivotY": 13, "pivotX": 77, "height": 25, "fontSize": 25, "color": "#fff", "bold": true, "align": "left" }, "compId": 34 }] }, { "type": "Sprite", "props": { "y": 10, "x": 91, "texture": "game/head_ring.png", "scaleY": 0.95, "scaleX": 0.95 }, "compId": 10, "child": [{ "type": "Sprite", "props": { "texture": "game/head_bg.png" }, "compId": 40 }, { "type": "Sprite", "props": { "y": -21, "x": -21, "visible": true, "var": "userhead_add", "scaleY": 0.45, "scaleX": 0.45 }, "compId": 45 }] }, { "type": "Sprite", "props": { "y": 10, "x": 95, "width": 85, "var": "userhead", "scaleY": 0.95, "scaleX": 0.95, "height": 85 }, "compId": 9, "child": [{ "type": "Sprite", "props": { "y": 15, "x": 12, "width": 78, "renderType": "mask", "height": 78 }, "compId": 38, "child": [{ "type": "Circle", "props": { "y": 30, "x": 30, "radius": 40, "lineWidth": 1, "fillColor": "#fb0a06" }, "compId": 39 }] }] }] }, { "type": "Sprite", "props": { "y": 600, "x": 190 }, "compId": 28, "child": [{ "type": "Sprite", "props": { "y": 62, "x": 180, "width": 364, "visible": false, "var": "ready", "texture": "game/game_ready.png", "scaleY": 0, "scaleX": 0, "pivotY": 62, "pivotX": 180, "height": 123 }, "compId": 29 }, { "type": "Sprite", "props": { "y": 63, "x": 184, "width": 154, "visible": true, "var": "go", "texture": "game/game_go.png", "scaleY": 0, "scaleX": 0, "pivotY": 54, "pivotX": 78, "height": 106 }, "compId": 30 }] }], "loadList": ["game/game_topbg.png", "game/game_bodybg.png", "game/bottom_line.png", "game/score_bg2.png", "game/head_ring.png", "game/head_bg.png", "game/score_bg1.png", "game/game_ready.png", "game/game_go.png"], "loadList3D": [] };
        return GameMainUI;
    }(View));
    ui.GameMainUI = GameMainUI;
    var GameWinViewUI = /** @class */ (function (_super) {
        __extends(GameWinViewUI, _super);
        function GameWinViewUI() {
            return _super.call(this) || this;
        }
        GameWinViewUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameWinViewUI.uiView);
        };
        GameWinViewUI.uiView = { "type": "View", "props": { "width": 720, "height": 720 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 352, "x": 352 }, "compId": 3, "child": [{ "type": "Sprite", "props": { "y": 53.5, "x": 10.5, "width": 642, "var": "win_bg", "texture": "game/win_bg.png", "pivotY": 325, "pivotX": 320, "height": 642 }, "compId": 4 }, { "type": "Sprite", "props": { "y": -346, "x": -336, "width": 678, "texture": "game/win.png", "height": 679 }, "compId": 5 }] }], "loadList": ["game/win_bg.png", "game/win.png"], "loadList3D": [] };
        return GameWinViewUI;
    }(View));
    ui.GameWinViewUI = GameWinViewUI;
    var LossViewUI = /** @class */ (function (_super) {
        __extends(LossViewUI, _super);
        function LossViewUI() {
            return _super.call(this) || this;
        }
        LossViewUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(LossViewUI.uiView);
        };
        LossViewUI.uiView = { "type": "View", "props": { "width": 720, "height": 720 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 240, "x": 85, "texture": "game/lose.png" }, "compId": 3 }], "loadList": ["game/lose.png"], "loadList3D": [] };
        return LossViewUI;
    }(View));
    ui.LossViewUI = LossViewUI;
    var RootViewUI = /** @class */ (function (_super) {
        __extends(RootViewUI, _super);
        function RootViewUI() {
            return _super.call(this) || this;
        }
        RootViewUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(RootViewUI.uiView);
        };
        RootViewUI.uiView = { "type": "View", "props": { "width": 720, "height": 1280, "autoDestroyAtClosed": true }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "var": "layer_maingame" }, "compId": 3 }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "layer_over" }, "compId": 4 }], "loadList": [], "loadList3D": [] };
        return RootViewUI;
    }(View));
    ui.RootViewUI = RootViewUI;
})(ui = exports.ui || (exports.ui = {}));
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//序列帧播放
var AniUtils = /** @class */ (function () {
    function AniUtils() {
        this.nowNum = 1;
        //加分类特效，向上飘逐渐消失
        /**
         *
         * @param obj 要向上飘的预制体
         * @param speed 飘的速度
         * @param time 持续时间(/秒)
         * @param isAlpha 是否渐变消失
         */
        this.upGoEffectnum = 0;
        this.upGoEffectFunc = null;
        this.objAddEffectFunc = null;
        this.objAddToEffectFunc = null;
        this.objGuiderEffectFunc = null;
    }
    //img:载体  path:路径前缀   num:播放数量(路径后缀)  format:图片格式  loop:是否循环   func:回调函数(可不传)
    AniUtils.prototype.play = function (img, path, num, format, loop, func) {
        if (loop === void 0) { loop = false; }
        if (img != null && path != null && num != null && loop != null) {
            this.num = num;
            if (func != null) {
                this.func = func;
            }
            img.skin = path + this.nowNum.toString() + "." + format;
            Laya.timer.frameLoop(2, this, this.imgloop, [img, path, format, loop]);
        }
    };
    AniUtils.prototype.imgloop = function (img, path, format, loop) {
        if (this.nowNum < this.num) {
            this.nowNum += 1;
            img.skin = path + this.nowNum.toString() + "." + format;
        }
        else {
            if (loop === true) {
                this.nowNum = 0;
            }
            else {
                if (this.func != null) {
                    this.func();
                }
                Laya.timer.clear(this, this.imgloop);
            }
        }
    };
    AniUtils.prototype.upGoEffect = function (obj, speed, time, isAlpha, func) {
        if (obj != null && speed != null && time != null && isAlpha != null) {
            this.upGoEffectnum = Math.floor(time * 1000 / 50);
            obj.alpha = 1;
            var isRate = true;
            Laya.Tween.to(obj, { scale: 4 }, time * 1000, Laya.Ease.strongOut, null, 0);
            if (func != null) {
                this.upGoEffectFunc = func;
            }
            Laya.timer.loop(50, this, this.objUpLoop, [obj, speed, time, isAlpha]);
        }
    };
    AniUtils.prototype.objUpLoop = function (obj, speed, time, isAlpha) {
        this.upGoEffectnum -= 1;
        if (isAlpha) {
            obj.alpha = this.upGoEffectnum / Math.floor(time * 1000 / 80);
        }
        if (this.upGoEffectnum >= 0) {
            obj.y -= speed;
        }
        else {
            if (this.upGoEffectFunc != null) {
                this.upGoEffectFunc();
            }
            Laya.timer.clear(this, this.objUpLoop);
        }
    };
    AniUtils.prototype.objAddEffect = function (obj, posYTo, time, isAlpha, func) {
        if (func != null) {
            this.objAddEffectFunc = func;
        }
        Laya.Tween.to(obj, { scaleX: 1.2, scaleY: 1.2, }, time / 2, Laya.Ease.strongOut, null, 0);
        Laya.Tween.to(obj, { scaleX: 1, scaleY: 1, }, time / 2, Laya.Ease.strongOut, null, time / 2);
        Laya.Tween.to(obj, { y: posYTo }, time, Laya.Ease.strongOut, Laya.Handler.create(this, this.afterAddEffect, []), 0);
    };
    AniUtils.prototype.afterAddEffect = function () {
        if (this.objAddEffectFunc != null) {
            this.objAddEffectFunc();
        }
        Laya.timer.clear(this, this.objAddEffect);
    };
    AniUtils.prototype.objAddToEffect = function (obj, posYTo, time, isAlpha, func) {
        if (func != null) {
            this.objAddToEffectFunc = func;
        }
        if (isAlpha) {
            Laya.Tween.to(obj, { alpha: 1 }, time / 2, Laya.Ease.strongOut, null, 0);
            Laya.Tween.to(obj, { alpha: 0 }, time / 2, Laya.Ease.strongOut, null, time / 2);
        }
        Laya.Tween.to(obj, {}, time, Laya.Ease.strongOut, Laya.Handler.create(this, this.afterAddToEffect), 0);
    };
    AniUtils.prototype.afterAddToEffect = function () {
        if (this.objAddToEffectFunc != null) {
            this.objAddToEffectFunc();
        }
        Laya.timer.clear(this, this.objAddToEffect);
    };
    AniUtils.prototype.objGuiderClickEffect = function (obj, obj2, posYTo, time, isAlpha, func) {
        if (func != null) {
            this.objGuiderEffectFunc = func;
        }
        if (isAlpha) {
            obj.alpha = 0.6;
        }
        Laya.Tween.to(obj, { alpha: 1, scaleX: 0.8, scaleY: 0.8 }, time / 4, Laya.Ease.strongOut, null, 0);
        Laya.Tween.to(obj2, { scaleX: 0.5, scaleY: 0.3 }, time / 4, Laya.Ease.strongOut, null, 0);
        Laya.Tween.to(obj, { alpha: 0.6, scaleX: 1, scaleY: 1 }, time / 4, Laya.Ease.strongOut, null, time / 4);
        Laya.Tween.to(obj2, { scaleX: 1, scaleY: 0.6 }, time / 4, Laya.Ease.strongOut, null, time / 4);
        Laya.Tween.to(obj, { alpha: 1, scaleX: 0.8, scaleY: 0.8 }, time / 4, Laya.Ease.strongOut, null, time / 2);
        Laya.Tween.to(obj2, { scaleX: 0.5, scaleY: 0.3 }, time / 4, Laya.Ease.strongOut, null, time / 2);
        Laya.Tween.to(obj, { alpha: 0.6, scaleX: 1, scaleY: 1 }, time / 4, Laya.Ease.strongOut, null, time * 3 / 4);
        Laya.Tween.to(obj2, { scaleX: 1, scaleY: 0.6 }, time / 4, Laya.Ease.strongOut, null, time * 3 / 4);
        Laya.Tween.to(obj, {}, time, Laya.Ease.strongOut, Laya.Handler.create(this, this.afterGuiderClickEffect), 0);
    };
    AniUtils.prototype.afterGuiderClickEffect = function () {
        if (this.objGuiderEffectFunc != null) {
            this.objGuiderEffectFunc();
        }
        Laya.timer.clear(this, this.objGuiderClickEffect);
    };
    AniUtils.prototype.objGuiderMoveEffect = function (obj, obj2, posYFrom, posYTo, time, isAlpha, func) {
        if (func != null) {
            this.objGuiderEffectFunc = func;
        }
        if (isAlpha) {
            obj.alpha = 0.6;
            obj.scaleX = 1;
            obj.scaleY = 1;
            obj2.alpha = 0.6;
        }
        Laya.Tween.to(obj, { alpha: 1, scaleX: 0.8, scaleY: 0.8 }, 400, Laya.Ease.strongOut, null, 0);
        Laya.Tween.to(obj, { alpha: 0.6, scaleX: 1, scaleY: 1 }, 400, Laya.Ease.strongOut, null, time - 400);
        Laya.Tween.to(obj2, { alpha: 1, y: posYTo }, time / 4, Laya.Ease.strongOut, null, 0);
        Laya.Tween.to(obj2, { alpha: 0.6, y: posYFrom }, time / 4, Laya.Ease.strongOut, null, time / 4);
        Laya.Tween.to(obj2, { alpha: 1, y: posYTo }, time / 4, Laya.Ease.strongOut, null, time / 2);
        Laya.Tween.to(obj2, { alpha: 0.6, y: posYFrom }, time / 4, Laya.Ease.strongOut, null, time * 3 / 4);
        Laya.Tween.to(obj, { y: posYTo }, time, Laya.Ease.strongOut, Laya.Handler.create(this, this.afterGuiderMoveEffect), 0);
    };
    AniUtils.prototype.afterGuiderMoveEffect = function () {
        if (this.objGuiderEffectFunc != null) {
            this.objGuiderEffectFunc();
        }
        Laya.timer.clear(this, this.objGuiderMoveEffect);
    };
    AniUtils.prototype.burstEffect = function (obj, res, func) {
        Laya.timer.loop(30, this, this.doBurstEffecttFun, [obj, res]);
    };
    AniUtils.prototype.doBurstEffecttFun = function (obj, res) {
        obj.load(res, true);
    };
    /**
     *
     * @param obj
     * @param time
     * @param func
     */
    AniUtils.prototype.effectClear = function (obj, time, func) {
        if (obj !== null && time !== null) {
            this.effectClearNum = Math.floor(time * 1000 / 30);
            if (func != null) {
                this.effectClearFunc = func;
            }
            obj.scaleX = 0;
            Laya.timer.loop(30, this, this.effectClearLoop, [obj, time]);
        }
    };
    AniUtils.prototype.effectClearLoop = function (obj, time) {
        if (this.effectClearNum >= 0 && obj.scaleX <= 0.7) {
            this.effectClearNum -= 1;
            obj.scaleX = 1 - (this.effectClearNum / Math.floor(time * 1000 / 30));
        }
        else if (this.effectClearNum >= 0 && obj.scaleX <= 0.9) {
            obj.scaleX = 0.95;
        }
        else if (this.effectClearNum >= 0 && obj.scaleX >= 0.9) {
            obj.scaleX = 1;
            var img = new Laya.Image();
            img.skin = "game/img_bt21_tx.png";
            img.pivot(318, 33);
            //img.skewX=obj.skewX;
            //img.skewY=obj.skewY;
            img.scale(1.1, 1.1);
            obj.addChild(img);
            img.x = obj.width / 2;
            img.y = obj.height / 2;
            this.effectClearNum = -1;
        }
        else if (this.effectClearNum <= 0) {
            obj.destroyChildren();
            if (this.effectClearFunc != null) {
                this.effectClearFunc();
            }
            Laya.timer.clear(this, this.effectClearLoop);
        }
    };
    //清除定时器
    AniUtils.prototype.stop = function (fuc) {
        Laya.timer.clear(this, fuc);
    };
    return AniUtils;
}());
exports.AniUtils = AniUtils;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MathTools = /** @class */ (function () {
    function MathTools() {
    }
    /**
     * 获得人物中心和鼠标坐标连线，与y轴正半轴之间的夹角
     * @param px 人物中心x
     * @param py 人物中心y
     * @param mx 鼠标x
     * @param my 鼠标y
     * @return 角度
     *
     */
    MathTools.getAngleFormY = function (px, py, mx, my) {
        var x = Math.abs(px - mx);
        var y = Math.abs(py - my);
        var z = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
        var cos = y / z;
        var radina = Math.acos(cos); //用反三角函数求弧度
        var angle = 180 / (Math.PI / radina); //将弧度转换成角度
        if (mx > px && my > py) { //鼠标在第四象限
            angle = angle;
        }
        else if (mx == px && my > py) { //鼠标在y轴负方向上
            angle = 180;
        }
        else if (mx > px && my == py) { //鼠标在x轴正方向上
            angle = 90;
        }
        else if (mx < px && my > py) { //鼠标在第三象限
            angle = -angle;
        }
        else if (mx < px && my == py) { //鼠标在x轴负方向
            angle = -90;
        }
        else if (mx < px && my < py) { //鼠标在第二象限
            angle = -180 + angle;
        }
        else if (mx > px && my < py) { //鼠标在第一象限            
            angle = 180 - angle;
        }
        return angle;
    };
    /**
     * 获得2点间的距离
     * @param px 起点x
     * @param py 起点y
     * @param mx 鼠标x
     * @param my 鼠标y
     * @return 距离
     *
     */
    MathTools.getDistance = function (px, py, mx, my) {
        var x = Math.abs(px - mx);
        var y = Math.abs(py - my);
        var z = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
        return z;
    };
    /**
     * 生成从minNum到maxNum的随机整数
     * @param minNum 包含
     * @param maxNum 包含
     * @return 随机数
     *
     */
    MathTools.randomNum = function (minNum, maxNum) {
        return minNum + Math.round((maxNum - minNum) * Math.random());
    };
    /**
* 生成从minNum到maxNum的随机浮点数
* @param minNum 包含
* @param maxNum 包含
* @return 随机数
*
*/
    MathTools.randomFloat = function (minNum, maxNum) {
        return minNum + (maxNum - minNum) * Math.random();
    };
    MathTools.pieceMoveFromTween = function (ime_piece, posX, posY) {
        Laya.Tween.from(ime_piece, { x: posX, y: posY }, 1000, Laya.Ease.elasticOut, null, 0);
    };
    MathTools.pieceMoveToTween = function (ime_piece, posX, posY) {
        Laya.Tween.to(ime_piece, { x: posX, y: posY }, 1000, Laya.Ease.elasticOut, null, 0);
    };
    MathTools.isArrayEquals = function (arr1, arr2) {
        if (arr1.length != arr2.length) {
            return false;
        }
        for (var i = 0, l = this.length; i < l; i++) {
            if (arr1 instanceof Array && arr2 instanceof Array) {
                if (arr1[i] != (arr2[i])) {
                    return false;
                }
            }
            else if (arr1[i] != (arr2[i])) {
                return false;
            }
        }
        return true;
    };
    MathTools.getMissBlockPosArr = function (arr) {
        var missArr = [];
        for (var i = 0; i < 4; i++) {
            if (arr.indexOf(i) == -1) {
                missArr.push(i);
            }
        }
        return missArr;
    };
    MathTools.isElementInArray = function (arr, pos) {
        if (arr.indexOf(pos) == -1) {
            return false;
        }
        return true;
    };
    MathTools.nameStringPro = function (str, len) {
        var reg = /[\u4e00-\u9fa5]/g, //专业匹配中文
        slice = str.substring(0, len), chineseCharNum = (~~(slice.match(reg) && slice.match(reg).length)), realen = slice.length * 2 - chineseCharNum;
        return str.substr(0, realen) + (realen < str.length ? "..." : "");
    };
    return MathTools;
}());
exports.MathTools = MathTools;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var Main_1 = require("../Main");
var PlayerData_1 = require("../model/PlayerData");
var MessageProxy_1 = require("../MessageProxy");
var LayerEnum;
(function (LayerEnum) {
    LayerEnum[LayerEnum["Layer_Main"] = 0] = "Layer_Main";
    LayerEnum[LayerEnum["Layer_Over"] = 1] = "Layer_Over";
})(LayerEnum || (LayerEnum = {}));
var GameEndView = /** @class */ (function (_super) {
    __extends(GameEndView, _super);
    function GameEndView() {
        var _this = _super.call(this) || this;
        _this.timerNum = 4;
        return _this;
    }
    GameEndView.prototype.init = function () {
        // Laya.timer.loop(1000,this,this.timerCutDownView);
        var result = PlayerData_1.PlayerData.Instance().getGameResult();
        // console.log("GameEndView result: "+result); 
        if (result >= 0) {
            this.showUserWin();
        }
        else {
            this.showUserLose();
        }
    };
    GameEndView.prototype.showUserWin = function () {
        var _this = this;
        var winViewUI = new layaMaxUI_1.ui.GameWinViewUI();
        this.box_container.addChild(winViewUI);
        Laya.SoundManager.playSound("sound/win.mp3", 1);
        Laya.Tween.to(this.box_container, { scaleX: 1, scaleY: 1 }, 500, Laya.Ease.strongOut, null, 0);
        Laya.timer.frameLoop(5, this, function () {
            _this.rotationLight(winViewUI.win_bg);
        });
    };
    GameEndView.prototype.showUserLose = function () {
        var loseViewUI = new layaMaxUI_1.ui.LossViewUI();
        this.box_container.addChild(loseViewUI);
        Laya.SoundManager.playSound("sound/over.mp3", 1);
        Laya.Tween.to(this.box_container, { scaleX: 1, scaleY: 1 }, 500, Laya.Ease.strongOut, null, 0);
    };
    GameEndView.prototype.rotationLight = function (obj) {
        obj.rotation += 2;
    };
    //销毁函数
    GameEndView.prototype.onDestory = function () {
        // console.log("GameEndView onDestory");
        MessageProxy_1.MessageProxy.Instance().SetGameView(null);
        MessageProxy_1.MessageProxy.Instance().SendGameOver();
        Laya.SoundManager.stopAll();
        Laya.timer.clearAll(this);
        this.removeSelf();
        this.destroy();
    };
    //倒计时关闭界面
    GameEndView.prototype.timerCutDownView = function () {
        this.timerNum -= 1;
        if (this.timerNum <= 0) {
            this.onDestory();
            Main_1.game.rootView.closeView(Main_1.game.rootView.gameMainUI, LayerEnum.Layer_Main);
            Main_1.game.rootView.closeView(Main_1.game.rootView.gameEndView, LayerEnum.Layer_Over);
        }
    };
    return GameEndView;
}(layaMaxUI_1.ui.GameEndViewUI));
exports.GameEndView = GameEndView;
},{"../Main":2,"../MessageProxy":3,"../model/PlayerData":6,"../ui/layaMaxUI":7}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BlockItem_1 = require("../model/BlockItem");
var BlockContainer_1 = require("../model/BlockContainer");
var MathTools_1 = require("../utils/MathTools");
var MessageProxy_1 = require("../MessageProxy");
var PlayerData_1 = require("../model/PlayerData");
var Main_1 = require("../Main");
var AniUtils_1 = require("../utils/AniUtils");
var BlockEnum;
(function (BlockEnum) {
    BlockEnum[BlockEnum["Block_Cake"] = 0] = "Block_Cake";
    BlockEnum[BlockEnum["Block_Chocolate"] = 1] = "Block_Chocolate";
})(BlockEnum || (BlockEnum = {}));
var LayerEnum;
(function (LayerEnum) {
    LayerEnum[LayerEnum["Layer_Main"] = 0] = "Layer_Main";
    LayerEnum[LayerEnum["Layer_Over"] = 1] = "Layer_Over";
})(LayerEnum || (LayerEnum = {}));
var GAMEMUSIC_BG = 'sound/bg.mp3';
var GAMEMUSIC_READY = 'sound/readygo.mp3';
var GAMEMUSIC_CLICK = 'sound/click.mp3';
var BLOCKITEMFALG = "blockitem";
var GameMainView = /** @class */ (function (_super) {
    __extends(GameMainView, _super);
    function GameMainView() {
        var _this = _super.call(this) || this;
        _this.creatFrame = 40; //71
        _this.moveFrame = 1;
        _this.isReady = false;
        _this.isGameOver = false;
        _this.isNeedPutRoad = false;
        _this.curOppRoadPos = 0;
        _this.roadArr = [_this.road0, _this.road1, _this.road2, _this.road3];
        _this.containerArr = [];
        _this.operateArr = [];
        _this.notMissBlockNum = 0;
        _this.creatBlockNum = 0;
        _this.blockArr = [];
        _this.curRoadNumArr = [];
        _this.tipsAddList = []; //+n提示
        _this.tipsAddToList = []; //add to 提示
        _this.isGuiderClick = 0;
        _this.isGuiderMove = false;
        _this.roboteAiNum = 0;
        _this.canTouch = true;
        //关闭多点触控
        Laya.MouseManager.multiTouchEnabled = false;
        _this.setChildIndex(_this.game_topbg, 1);
        MessageProxy_1.MessageProxy.Instance().SendGameReady();
        MessageProxy_1.MessageProxy.Instance().SetGameView(_this);
        _this.initTouchEvent();
        _this.showReady();
        Laya.timer.frameLoop(_this.creatFrame, _this, _this.creatBlockContainer, []);
        Laya.timer.frameLoop(_this.moveFrame, _this, _this.frameLoopContainerMoveDown, [1.5]);
        Laya.timer.loop(2000, _this, _this.tipsHelper);
        _this.on('IS_ROBOTE_EVENT', _this, _this.roboteAI);
        return _this;
    }
    GameMainView.Instance = function () {
        if (this.instance == null) {
            this.instance = new GameMainView();
        }
        return this.instance;
    };
    ;
    GameMainView.prototype.frameLoopLineMoveDown = function (index) {
        var posY = PlayerData_1.PlayerData.Instance().getBottomLine();
        posY -= index;
        PlayerData_1.PlayerData.Instance().setBottomLine(posY);
    };
    GameMainView.prototype.frameLoopContainerMoveDown = function (index) {
        if (!this.judgeIsBottom()) {
            this.container_move.y += index;
        }
        this.frameLoopLineMoveDown(index);
    };
    GameMainView.prototype.judgeIsBottom = function () {
        if (this.containerArr.length <= 0) {
            return;
        }
        var posY = PlayerData_1.PlayerData.Instance().getBottomLine();
        var isPeng = false;
        if (posY - this.containerArr[0].y < -250) {
            isPeng = true;
        }
        else {
            isPeng = false;
        }
        if (isPeng) {
            this.postGameOver();
        }
        return isPeng;
    };
    GameMainView.prototype.roboteAI = function () {
        var _this = this;
        Laya.timer.clear(this, this.roboteAI);
        Laya.timer.loop(2000, this, function () {
            var randomNum = MathTools_1.MathTools.randomNum(0, 3);
            _this.roboteAiNum += randomNum;
            if (_this.roboteAiNum < 30) {
                _this.addBlockContainerByOppo(randomNum);
            }
            else {
                Laya.timer.clearAll(_this);
                MessageProxy_1.MessageProxy.Instance().SendPostScore(0, PlayerData_1.PlayerData.Instance().getOppositeId());
                //1                
                PlayerData_1.PlayerData.Instance().setGameResult(1);
            }
        });
    };
    GameMainView.prototype.showReady = function () {
        this.go.visible = true;
        this.ready.visible = true;
        Laya.Tween.to(this.ready, { scaleX: 1, scaleY: 1 }, 400, Laya.Ease.strongOut, null, 0);
        Laya.Tween.to(this.ready, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.strongOut, null, 400);
        Laya.Tween.to(this.go, { scaleX: 1, scaleY: 1 }, 400, Laya.Ease.strongOut, null, 700);
        Laya.Tween.to(this.go, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.strongOut, Laya.Handler.create(this, this.resetReadyGo), 1100);
        Laya.SoundManager.playSound(GAMEMUSIC_READY, 1, new Laya.Handler(this, this.playMusicBg));
    };
    GameMainView.prototype.resetReadyGo = function () {
        this.go.scale(0.1, 0.1);
        this.go.visible = false;
        this.ready.scale(0.1, 0.1);
        this.ready.visible = false;
        this.isReady = true;
    };
    GameMainView.prototype.playMusicBg = function () {
        Laya.SoundManager.stopSound(GAMEMUSIC_READY);
        Laya.SoundManager.playMusic(GAMEMUSIC_BG, 0);
    };
    GameMainView.prototype.stopPlayMusicBg = function () {
        Laya.SoundManager.stopMusic();
    };
    GameMainView.prototype.initTouchEvent = function () {
        this.road0.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown, [Laya.Event, 0]);
        this.road1.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown, [Laya.Event, 1]);
        this.road2.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown, [Laya.Event, 2]);
        this.road3.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown, [Laya.Event, 3]);
    };
    GameMainView.prototype.onMouseDown = function (e, pos) {
        if (this.isReady && !this.isGameOver) {
            this.touchEventStartY = Laya.stage.mouseY;
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp, [e, pos]);
            Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.onMouseUp, [e, pos]);
        }
    };
    GameMainView.prototype.onMouseUp = function (e, pos) {
        Laya.SoundManager.playSound(GAMEMUSIC_CLICK, 1);
        if (this.containerArr.length <= 0) {
            return;
        }
        this.curOppRoadPos = pos;
        // console.log("当前点击的轨道 : "+ this.curOppRoadPos);
        this.touchEventEndY = Laya.stage.mouseY;
        Laya.stage.off(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.onMouseUp);
        var dist = Math.abs(this.touchEventStartY - this.touchEventEndY);
        this.operateArr = this.calculateCurrentPopContainArr(this.containerArr);
        //提示
        this.isNeedPutRoad = this.calculateMovePosition(this.operateArr, this.curOppRoadPos);
        // console.log("点击 当前轨道 满足的数量："+this.creatBlockNum);
        if (dist >= 100) { //拖动
            // console.log("滑动事件 ");
            this.createBlockArr(this.creatBlockNum, this.curOppRoadPos, false);
        }
        else { //点击
            // console.log("点击事件 ");
            this.createBlockArr(1, this.curOppRoadPos, true);
        }
    };
    GameMainView.prototype.tipsHelper = function () {
        var popArr = this.calculateCurrentPopContainArr(this.containerArr);
        if (popArr.length == 0) {
            return;
        }
        if (popArr.length > 1 && !this.isGuiderMove) {
            this.guider2Click(MathTools_1.MathTools.getMissBlockPosArr(popArr[0].getBlockPosArr())[0]);
        }
        else if (this.isGuiderClick < 2 && popArr[0].getBlockPosArr().length == 3) {
            this.guider1Click(MathTools_1.MathTools.getMissBlockPosArr(popArr[0].getBlockPosArr())[0]);
        }
    };
    GameMainView.prototype.creatBlockContainer = function () {
        this.isReady = true;
        var length = this.containerArr.length;
        if (!this.isGameOver) {
            var container = Laya.Pool.getItemByClass("container", BlockContainer_1.BlockContainer);
            container.initBlockContainer();
            container.generateBlockItemContainer();
            if (this.containerArr.length > 0) {
                container.y = this.containerArr[this.containerArr.length - 1].y - 110;
            }
            this.container_move.addChild(container);
            this.containerArr.push(container);
            console.log("creatBlockContainer: " + this.containerArr.length);
        }
    };
    GameMainView.prototype.creatBlockContainerByClick = function (roadPos) {
        // console.log("creatBlockContainerByClick");
        if (!this.isGameOver) {
            var container = Laya.Pool.getItemByClass("container", BlockContainer_1.BlockContainer);
            container.initClickBlockContainer();
            container.generateBlockItemContainerByClick(roadPos);
            container.centerX = 0;
            container.y = this.containerArr[0].y + 110;
            this.container_move.addChild(container);
            this.containerArr.unshift(container);
        }
    };
    //生成相应数量的block数组（用来移动）
    GameMainView.prototype.createBlockArr = function (needNum, roadPos, isClick) {
        var disY = this.containerArr[0].y;
        if (!this.isNeedPutRoad) {
            needNum = 1;
            disY += 110;
        }
        for (var i = 0; i < needNum; i++) {
            var blockItem = new BlockItem_1.BlockItem(BlockEnum.Block_Cake, "game/block_cake.png");
            blockItem.y = this.bottom_line.y + i * 120;
            this.roadArr[roadPos].addChild(blockItem);
            this.blockArr.push(blockItem);
            blockItem.tween = Laya.Tween.to(blockItem, { y: Math.abs(disY % 1440 - 1440) + i * 120 }, 80, Laya.Ease.strongOut, Laya.Handler.create(this, this.doAfterBlockArrsMoved, [isClick]), 0);
            // blockItem.tween = Laya.Tween.to(blockItem, {y:disY - i*120}, 800, Laya.Ease.strongOut, Laya.Handler.create(this,this.doAfterBlockArrsMoved,[isClick]), 0);                        
        }
        return this.blockArr;
    };
    //需要操作的容器数组
    GameMainView.prototype.calculateCurrentPopContainArr = function (containerArr) {
        // console.log("计算需要操作的容器数组");
        var popSameArr = [];
        var endFlag = false;
        if (containerArr.length == 0) {
            return popSameArr;
        }
        var firstBlockArr = containerArr[0].getBlockPosArr();
        this.curRoadNumArr = MathTools_1.MathTools.getMissBlockPosArr(firstBlockArr);
        var firstThreeBlockArr = [];
        for (var i = 0; i < containerArr.length; i++) {
            if (containerArr[i].getBlockPosArr().length == 3) {
                firstThreeBlockArr = containerArr[i].getBlockPosArr();
                break;
            }
        }
        // console.log("当前轨道 ："+ this.curRoadNumArr + "需要被填充");
        for (var i = 0; i < containerArr.length; i++) {
            if (containerArr[i].getBlockPosArr().length == 4) {
                endFlag = true;
                popSameArr.push(containerArr[i]);
            }
            else if (containerArr[i].getBlockPosArr().length < 3) {
                popSameArr.push(containerArr[i]);
            }
            else if (firstBlockArr.toString() == containerArr[i].getBlockPosArr().toString() || firstThreeBlockArr.toString() == containerArr[i].getBlockPosArr().toString()) {
                if (endFlag) {
                    break;
                }
                popSameArr.push(containerArr[i]);
            }
            else {
                break;
            }
        }
        // console.log("该轨道操作的数组数量 "+popSameArr.length);
        // console.log("需要首先填充的container数组 ： "+popSameArr[0].getBlockPosArr()+" 长度 "+popSameArr.length);
        return popSameArr;
    };
    //计算生成的block 需要移动位置Y坐标
    GameMainView.prototype.calculateMovePosition = function (needAddContainerArr, pos) {
        // console.log("计算生成的block 需要移动位置Y坐标");
        var containerLength = needAddContainerArr.length;
        var endContainer = needAddContainerArr[0];
        this.notMissBlockNum = 0;
        this.creatBlockNum = 0;
        var flag = false;
        for (var i = containerLength - 1; i >= 0; i--) {
            if (needAddContainerArr[i].isContainerIsMissing()) {
                break;
            }
            else {
                this.notMissBlockNum += 1;
            }
        }
        for (var i = 0; i < needAddContainerArr.length; i++) {
            var tempArr = needAddContainerArr[i].getBlockPosArr();
            if (this.isInNeedAddRoadArr(tempArr, pos)) {
                endContainer = needAddContainerArr[i];
                flag = true;
                this.creatBlockNum += 1;
            }
            else {
                if (flag) {
                    return true;
                }
                else {
                    this.creatBlockNum = 1;
                    return false;
                }
            }
        }
        return true;
    };
    //移动到对应位置  删除containerArr blockArr 消失 
    GameMainView.prototype.doAfterBlockArrsMoved = function (isClick) {
        var blockCount = this.blockArr.length;
        var toatleCount = blockCount + this.notMissBlockNum;
        var containerCount = this.operateArr.length;
        if (this.isNeedPutRoad) {
            // console.log("添加到容器成功");            
            //add
            if (isClick) {
                for (var i = containerCount - this.notMissBlockNum - 1; i >= 0; i--) {
                    if (this.isInNeedAddRoadArr(this.operateArr[i].getBlockPosArr(), this.curOppRoadPos)) {
                        this.operateArr[i].addMissBlockByIndex(this.curOppRoadPos);
                        break;
                    }
                }
            }
            else {
                for (var i = blockCount - 1; i >= 0; i--) {
                    this.operateArr[i].addMissBlockByIndex(this.curOppRoadPos);
                }
            }
            //remove
            if (containerCount > toatleCount) {
                for (var i = 0; i < blockCount; i++) {
                    this.blockArr[i].clearBolckItem();
                }
                this.blockArr = [];
            }
            else if (containerCount == toatleCount) {
                var count = 0;
                for (var i = 0; i < containerCount; i++) {
                    if (this.operateArr[i].getBlockPosArr().length == 4) {
                        count += 1;
                        this.operateArr[i].playExplodeAni();
                        this.operateArr[i].onDestory();
                    }
                    else {
                        this.operateArr = [];
                        break;
                    }
                }
                this.containerArr.splice(0, count);
                for (var i = 0; i < blockCount; i++) {
                    this.blockArr[i].clearBolckItem();
                }
                this.addBlockContainerToOppo(count);
                this.blockArr = [];
            }
            else {
                this.blockArr = [];
            }
        }
        else {
            // console.log("添加到容器失败 新增容器 +1");            
            for (var i = 0; i < blockCount; i++) {
                this.blockArr[i].clearBolckItem();
            }
            this.blockArr = [];
            //添加错误  新增container
            this.creatBlockContainerByClick(this.curOppRoadPos);
        }
    };
    //点击轨道是否在需要点击轨道数组中
    GameMainView.prototype.isInNeedAddRoadArr = function (roadArr, pos) {
        return !MathTools_1.MathTools.isElementInArray(roadArr, pos);
    };
    GameMainView.prototype.addBlockContainerByOppo = function (addNum) {
        var _this = this;
        console.log("addBlockContainerByOppo :" + addNum);
        var leagth = this.containerArr.length;
        if (leagth <= 0 || addNum <= 0) {
            return;
        }
        Laya.timer.clear(this, this.frameLoopContainerMoveDown);
        Laya.timer.frameLoop(this.moveFrame, this, this.frameLoopContainerMoveDown, [15]);
        this.effectTipsAddContainer(addNum);
        var height = this.containerArr[leagth - 1].y;
        for (var i = 0; i < addNum; i++) {
            var container = Laya.Pool.getItemByClass("container", BlockContainer_1.BlockContainer);
            container.initBlockContainer();
            container.generateBlockItemContainer();
            container.y = height - (1 + i) * 110;
            this.container_move.addChild(container);
            this.containerArr.push(container);
        }
        Laya.timer.frameOnce(this.creatFrame / 8 * addNum, this, function () {
            Laya.timer.frameLoop(_this.moveFrame, _this, _this.frameLoopContainerMoveDown, [1.5]);
        });
    };
    GameMainView.prototype.addBlockContainerToOppo = function (addNum) {
        if (addNum > 0) {
            if (addNum > 5) {
                addNum = 5;
            }
            this.effectTipsAddToContainer(addNum);
            MessageProxy_1.MessageProxy.Instance().postBlockAddToOppo(addNum);
        }
    };
    //指引1
    GameMainView.prototype.guider1Click = function (roadNum) {
        var _this = this;
        var road = this.road0;
        if (roadNum == 0) {
            road = this.road0;
        }
        else if (roadNum == 1) {
            road = this.road1;
        }
        else if (roadNum == 2) {
            road = this.road2;
        }
        else {
            road = this.road3;
        }
        var imgAni = new AniUtils_1.AniUtils();
        var clickImg = new Laya.Image();
        clickImg.skin = "game/guide_click" + ".png";
        clickImg.x = road.x + 30;
        clickImg.y = this.bottom_line.y + 200;
        clickImg.scale(1, 1);
        var shadeImg = new Laya.Image();
        shadeImg.skin = "game/shade.png";
        shadeImg.x = road.x + 30;
        shadeImg.y = this.bottom_line.y + 260;
        shadeImg.scale(1, 0.8);
        this.addChild(shadeImg);
        this.addChild(clickImg);
        imgAni.objGuiderClickEffect(clickImg, shadeImg, 0, 1600, true, function () {
            clickImg.visible = false;
            shadeImg.visible = false;
            _this.isGuiderClick += 1;
        });
    };
    //指引2
    GameMainView.prototype.guider2Click = function (roadNum) {
        var _this = this;
        var road = this.road0;
        if (roadNum == 0) {
            road = this.road0;
        }
        else if (roadNum == 1) {
            road = this.road1;
        }
        else if (roadNum == 2) {
            road = this.road2;
        }
        else {
            road = this.road3;
        }
        var imgAni = new AniUtils_1.AniUtils();
        var gurderImg = new Laya.Image();
        gurderImg.skin = "game/guide_move.png";
        gurderImg.x = road.x;
        gurderImg.y = this.bottom_line.y;
        var clickImg = new Laya.Image();
        clickImg.skin = "game/guide_click" + ".png";
        clickImg.x = road.x + 50;
        clickImg.y = this.bottom_line.y + 150;
        this.addChild(gurderImg);
        this.addChild(clickImg);
        imgAni.objGuiderMoveEffect(clickImg, gurderImg, this.bottom_line.y + 20, this.bottom_line.y, 1000, true, function () {
            clickImg.visible = false;
            gurderImg.visible = false;
            _this.isGuiderMove = true;
        });
    };
    //+n特效   
    GameMainView.prototype.effectTipsAddContainer = function (score) {
        var imgAni = new AniUtils_1.AniUtils();
        var index = this.pool(this.tipsAddList, new Laya.Label);
        Main_1.game.rootView.gameMainUI.addChild(this.tipsAddList[index]);
        this.tipsAddList[index].destroyChildren();
        this.tipsAddList[index].y = 420;
        this.tipsAddList[index].x = 60;
        this.tipsAddList[index].scale(1, 1);
        var addImg = new Laya.Image();
        addImg.skin = "score/num_add" + ".png";
        var numImg = new Laya.Image();
        numImg.x = addImg.x + 50;
        numImg.skin = "score/num_add" + score + ".png";
        this.tipsAddList[index].addChild(addImg);
        this.tipsAddList[index].addChild(numImg);
        this.tipsAddList[index].anchorX = numImg.x;
        this.tipsAddList[index].anchorY = numImg.y + numImg.height / 2;
        imgAni.objAddEffect(this.tipsAddList[index], 380, 800, false, function () {
            Main_1.game.rootView.gameMainUI.tipsAddList[index].visible = false;
        });
    };
    //+ to oppo
    GameMainView.prototype.effectTipsAddToContainer = function (score) {
        var imgAni = new AniUtils_1.AniUtils();
        var index = this.pool(this.tipsAddToList, new Laya.Label);
        Main_1.game.rootView.gameMainUI.addChild(this.tipsAddToList[index]);
        this.tipsAddToList[index].destroyChildren();
        this.tipsAddToList[index].y = 450;
        this.tipsAddToList[index].x = 100;
        this.tipsAddToList[index].scale(1, 1);
        var numImg = new Laya.Image();
        numImg.skin = "game/hint0" + score + ".png";
        this.tipsAddToList[index].addChild(numImg);
        imgAni.objAddToEffect(this.tipsAddToList[index], 0, 600, true, function () {
            Main_1.game.rootView.gameMainUI.tipsAddToList[index].visible = false;
        });
    };
    //对象池提取
    GameMainView.prototype.pool = function (objList, type) {
        var isHave = false;
        var index;
        if (objList.length > 0) {
            for (var q = 0; q < objList.length; q++) {
                if (objList[q].text === null) {
                    isHave = true;
                    index = q;
                    break;
                }
            }
            if (!isHave) {
                var obj = type;
                objList.push(obj);
                index = objList.length - 1;
            }
        }
        else {
            var obj = type;
            objList.push(obj);
            index = objList.length - 1;
        }
        return index;
    };
    GameMainView.prototype.openGameEndView = function () {
        Main_1.game.rootView.openView(Main_1.game.rootView.gameEndView, LayerEnum.Layer_Over);
    };
    GameMainView.prototype.SetUserData = function (id, data) {
        if (id == 0) {
            // console.log("SetUserData :"+id + 'user name ' + data.userName +'user head' + data.userHead);
            PlayerData_1.PlayerData.Instance().setUserId(id);
            this.username.text = MathTools_1.MathTools.nameStringPro(data.userName, 5);
            this.drowCircleImg(this.userhead, data.userHead);
            this.drowCircleImg(this.userhead_add, data.userHeadFrame);
        }
        else {
            //    console.log("SetUserData :"+id + 'user name ' + data.userName + 'user head' + data.userHead);
            PlayerData_1.PlayerData.Instance().setUserId(id);
            // this.oppoName.text = data.userName;
            this.oppoName.text = MathTools_1.MathTools.nameStringPro(data.userName, 5);
            this.drowCircleImg(this.oppohead, data.userHead);
            this.drowCircleImg(this.oppohead_add, data.userHeadFrame);
        }
    };
    GameMainView.prototype.drowCircleImg = function (img, url) {
        if (url.length == 0) {
            return;
        }
        // img.loadImage("http://176.9.127.88:8585/90061.jpg");
        // img.loadImage("http://176.9.127.88:8585/temphead05.png");
        img.loadImage(url);
    };
    GameMainView.prototype.ShowResult = function (ret) {
        console.log("ShowResult :" + ret);
        if (!PlayerData_1.PlayerData.Instance().getIsOppoRobote()) {
            PlayerData_1.PlayerData.Instance().setGameResult(ret);
        }
        if (!this.isGameOver) {
            this.isGameOver = true;
        }
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        this.stopPlayMusicBg();
        this.openGameEndView();
        this.destroyBlockContainer();
    };
    GameMainView.prototype.UpdateScoreData = function (id, score) {
        console.log(id + 'user score ' + score);
        if (id == 0) {
            PlayerData_1.PlayerData.Instance().setUserScore(score);
        }
        else {
            PlayerData_1.PlayerData.Instance().setOppositeScore(score);
        }
    };
    GameMainView.prototype.postGameOver = function () {
        if (!this.isGameOver) {
            this.isGameOver = true;
            Laya.timer.clearAll(this);
            Laya.Tween.clearAll(this);
            //0
            // if(PlayerData.Instance().getIsOppoRobote()){
            // }else{
            MessageProxy_1.MessageProxy.Instance().SendPostScore(0);
            PlayerData_1.PlayerData.Instance().setGameResult(-1);
            // }
        }
    };
    GameMainView.prototype.destroyBlockContainer = function () {
        // console.log("destroyBlockContainer  Game over");
        //模拟单机游戏结束  正式版本去掉
        // game.rootView.openView(game.rootView.gameEndView ,LayerEnum.Layer_Over);
        for (var i = 0; i < this.containerArr.length; i++) {
            //从舞台中移除
            this.container_move.removeChild(this.containerArr[i]);
            this.containerArr[i].onDestory();
            Laya.Pool.recover("container", this.containerArr[i]);
        }
        this.containerArr = [];
    };
    //销毁函数
    GameMainView.prototype.onDestory = function () {
        console.log("GameMainView onDestory");
        this.destroy();
        this.removeSelf();
    };
    return GameMainView;
}(layaMaxUI_1.ui.GameMainUI));
exports.default = GameMainView;
},{"../Main":2,"../MessageProxy":3,"../model/BlockContainer":4,"../model/BlockItem":5,"../model/PlayerData":6,"../ui/layaMaxUI":7,"../utils/AniUtils":8,"../utils/MathTools":9}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var GameMainView_1 = require("./GameMainView");
var GameEndView_1 = require("./GameEndView");
//UI层级枚举
var LayerEnum;
(function (LayerEnum) {
    LayerEnum[LayerEnum["Layer_Main"] = 0] = "Layer_Main";
    LayerEnum[LayerEnum["Layer_Over"] = 1] = "Layer_Over";
})(LayerEnum || (LayerEnum = {}));
var RootView = /** @class */ (function (_super) {
    __extends(RootView, _super);
    function RootView() {
        var _this = _super.call(this) || this;
        _this.gameMainUI = new GameMainView_1.default();
        _this.gameEndView = new GameEndView_1.GameEndView();
        _this.openView(_this.gameMainUI, LayerEnum.Layer_Main);
        return _this;
    }
    RootView.prototype.init = function () {
        // this.openView(GameMainView.Instance(),LayerEnum.Layer_Main);
    };
    //添加页面
    RootView.prototype.openView = function (view, type) {
        switch (type) {
            case LayerEnum.Layer_Main:
                {
                    this.layer_maingame.addChild(view);
                }
                break;
            case LayerEnum.Layer_Over:
                {
                    this.layer_over.addChild(view);
                    this.gameEndView.init();
                }
                break;
            default:
                break;
        }
    };
    //销毁掉这个页面
    RootView.prototype.closeView = function (view, type) {
        view.onDestory();
        switch (type) {
            case LayerEnum.Layer_Main:
                {
                    this.layer_maingame.destroyChildren();
                }
                break;
            case LayerEnum.Layer_Over:
                {
                    this.layer_over.destroyChildren();
                    this.onDestory();
                }
                break;
            default:
                break;
        }
    };
    //销毁函数
    RootView.prototype.onDestory = function () {
        this.removeSelf();
        this.destroy();
    };
    return RootView;
}(layaMaxUI_1.ui.RootViewUI));
exports.RootView = RootView;
},{"../ui/layaMaxUI":7,"./GameEndView":10,"./GameMainView":11}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
