//协议公共结构模块
//by lj 2015-11
//协议定义规范：
//结构体字段均以下划线开头
//命名采用linux c代码命名风格，即采用小写字母，各单词之间采用下划线相连接
//命名需要意思明确，不能产生混淆和歧义及冲突，能望名知义
//命名完全采用英文单词形式，只有在完全无英文对应的中文时才可采用拼音代替
//新定义协议时需参照已有协议，对于已有的概念，应尽可能的采用同一命名，而不是重新取名以增加维护难度
//这些proto协议定义好后，需使用脚本和工具对其进行编译及生成文件其它文件(如协议号)//供程序使用，而这些脚本和工具对这些协议文件的格式有一定的要求和限制，所以需要统一保持一至的格式，例如结构体定义时，“{”前需要空格等，以工具生成时完全正确为标准
//某些协议可能只有请求没有同名的回应协议时，仍需要定义一个同名的空down协议，因为脚本是以down.proto文件内容生成协议号的
//为协议新老版本兼容，一般协议字段不可删除，只可增加，且尽量使用optional模式，同时代码逻辑中同时做好兼容处理 by lj 2017-11-20

syntax = "proto2";
//tcp协议格式为：packet_len(2)+id(2)+seq(1)+reserve(4)+body即数据包长度(2字节大端序，包括id+seq+reserve+body，不包含packet_len本身字节)+协议号(2字节大端序)+序号(1字节)+预留字节(4字节)+数据包包体

//websocket协议格式为：head+body即数据包长度(2字节大端序，包括协议号+包体字节，不包含本身字节)+协议号(4字节大端序)+数据包包体
//head = seq(1)+id(2)+body_len(2) seq:序号(暂未实现)，1字节；id，消息号,2个字节；body_len，消息体长度，2个字节(消息体长度其实无意义，可作保留字段用)

//通用协议------------------------------------------
//登录流程：连接-->handshake(暂时不用，后期再实现)-->login-->get_role_info[首次-->create_role[-->get_role_info]]
//游戏流程：获取相关信息-->...-->match_game-->game_ready


//通用协议------------------------------------------
enum handshake_type_enum {
    suggest_upgrade       = 1;  // 建议升级
    required_upgrade      = 2;  // 强制升级
    server_maintain       = 3;  // 服务维护
    server_restart        = 4;  // 服务重启
}

enum login_type_enum {
    default_login   = 1;  // 默认登陆方式 (账号/密码)
    facebook_login  = 2;  // facebook登陆
	quick_login		= 3;  // 游客登录
}

enum logout_reason_enum{
    normal_logout = 1;  //客户端正常登出，服务端将立即关闭连接，客户端将不能收到服务端任何消息
    switch_user = 2;    //切换用户，服务端给予一定时间让用户选择其它帐户登录，连接暂时不会关闭
    //以下仅为服务端使用
    break_line  = 20;    //客户端断线
    for_error   = 21;    //错误引起
    relogin     = 22;    //重复登录，系统自动先将前一登录登出
    timeout_logout     = 23;    //超时引起
    kick    = 24;    //被踢下线
}

// 错误码
enum result_enum {
    error_code_success                                      = 0;    //操作成功
    error_code_none                                         = 90002;    //正常的失败，无须打印警告或错误日志
    error_code_fail                                         = 90003;    //失败，服务器异常
    error_code_invalid_req                                  = 90004;    //非法操作，操作依赖的状态不正常
    error_code_role_inexistent                              = 90005;    //角色不存在
    error_code_diamond_not_enough                           = 90006;    //玩家钻石不够，可能是自身，也可能是其他玩家影响
    error_code_db_fail                                      = 90007;    //db操作失败
    error_code_service_inexistent                           = 90008;    //未找到请求对应的服务，可能服务未开启
    error_code_game_not_begin                               = 90009;    //游戏没有开始
    error_code_param_error                                  = 90012;    //参数错误，如超出有效范围
    error_code_not_join_game                                = 90013;    //没有加入游戏或没有参与匹配游戏
    error_code_allow_in_one_room_limit                      = 90014;    //同一时间仅允许在一个房间玩游戏，一个玩家只允许创建一个固定庄家房间
    error_code_playing_unable_leave_room                    = 90015;    //游戏中不允许离开房间
    error_code_alread_playing                               = 90016;    //已经在游戏中
    error_code_player_count_not_enough                      = 90018;    //玩家个数不够
    error_code_can_not_join_game                            = 90019;    //不能加入游戏
    error_code_alread_sit_down                              = 90020;    //已经坐下
    error_code_gold_is_not_enough                           = 90021;    //金币不足
    error_code_send_expression_to_myself                    = 90024;    //给自己发表情
    error_code_obj_already_existent                         = 90025;    //对象已存在
    //...增加错误码
}

message result {
    required result_enum     _err_no                 = 1;        // 错误码
    optional string          _err_desc               = 2;        // 失败时的错误原因描述
}

//游戏玩家显示的信息:ID,昵称，微信头像
message role_base_info_struct {
    required uint64                            _uid                    = 1;  // 用户唯一标识，登录时由服务器返回
    required string                            _role_name              = 2;  // 角色名
    optional string                            _head_portrait          = 3;  // 头像，目前微信登录才有效
    optional uint32                            _sex                    = 4;  // 性别：1，男；2，女
}

//玩家自身信息:ID,昵称，钻石数量，微信头像
message role_info_struct {
    required role_base_info_struct             _role_base_info         = 1;  // 基本信息
    optional uint64                            _diamond                = 2;  // 钻石
    optional uint64                            _gold                   = 3;  // 金币
    optional int32                             _total_charm            = 4;  // 总魅力值
    optional int32                             _today_charm            = 5;  // 当日获得的魅力值（每日24时刷新）
    optional bool                              _is_trusteeship         = 6;  // 是否托管状态
    optional string                            _other_info             = 99; // 其它信息(服务器无须特别关心和操作的，可能只须记录及原样转发给客户端)，使用json格式，目前微信登录才有效
}

//聊天频道：1，当前游戏组聊(如一个处牌座内部)；2，私聊，仅两人交流；3，所在游戏所有在线玩家广播；4，所有游戏全服在线玩家广播；5，玩家所以公会广播；
enum chat_channel {
    playing    = 1;
    private    = 2;
    cur_game   = 3;
    all_world  = 4;
    game_guild = 5;
}

//内容类型：1，固定选择文字；2，表情；3，语音; 4, 自定义文字；5，邀请游戏；6，同意邀请游戏；
enum chat_type {
    chat_optional    = 1;
    chat_face        = 2;
    chat_voice       = 3;
    chat_custom      = 4;
    chat_invite_game = 5;
    chat_agree_invite_game = 6;
}
//通用协议------------------------------------------

//玩家分数
message user_game_score {
    required uint64                 _uid                    = 1;
    required uint64                 _cur_score              = 2;
}

//喜爱游戏
message love_game_struct {
    required string                 _gid                    = 1;
    required uint32                 _play_times             = 2;
}
