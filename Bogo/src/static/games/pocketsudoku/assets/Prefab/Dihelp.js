
// -- user code here --

/* --- start generated code --- */

// Generated by Phaser Editor 1.4.3 (Phaser v2.6.2)


/**
 * Dihelp.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function Dihelp(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	

	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	
	this.fPopup_level_info = this.game.add.sprite(0, 0, 'data03', 'popup_level_info', this);	
	
	var style = { font: "bold 28px", fill: "#602e0d",stroke:"#602e0d", strokeThickness:1};

	this.fTextcount1 = this.game.add.text(380, 60, '0', style, this);
	this.fTextcount1.scale.setTo(1.1,1.1);
	this.fTextcount1.anchor.setTo(1,0.5);
	
	this.fTextrule1 = this.game.add.text(15, 60, '', style, this);
	this.fTextrule1.scale.setTo(1,1.1);
	this.fTextrule1.anchor.setTo(0,0.5);
	_star = this.game.add.sprite(324, 57, 'data01', 'star', this);
	_star.scale.setTo(0.8, 0.8);
	_star.anchor.setTo(0.5, 0.5);
	
	this.fTextcount2 = this.game.add.text(380, 140, '0',style, this);
	this.fTextcount2.scale.setTo(1.1,1.1);
	this.fTextcount2.anchor.setTo(1,0.5);
	this.fTextrule2 = this.game.add.text(15, 140,   '', style, this);
	this.fTextrule2.scale.setTo(1,1.1);
	this.fTextrule2.anchor.setTo(0,0.5);

	_star = this.game.add.sprite(324, 137, 'data01', 'star', this);
	_star.scale.setTo(0.8, 0.8);
	_star.anchor.setTo(0.5, 0.5);
	
	this.fTextcount3 = this.game.add.text(380, 220, '0', style, this);
	this.fTextcount3.scale.setTo(1.1,1.1);
	this.fTextcount3.anchor.setTo(1,0.5);
	this.fTextrule3 = this.game.add.text(15, 220,   '', style, this);
	this.fTextrule3.scale.setTo(1,1.1);	
	this.fTextrule3.anchor.setTo(0,0.5);

	_star = this.game.add.sprite(324, 217, 'data01', 'star', this);
	_star.scale.setTo(0.8, 0.8);
	_star.anchor.setTo(0.5, 0.5);

	
	
	
	
	var _star;
	
	
	
	
	this.pivot.setTo(1.0, 1.0);
	this.start();
	_FX.Start(_FX.SE_POPUP_ON);
	
}

/** @type Phaser.Group */
var Dihelp_proto = Object.create(Phaser.Group.prototype);
Dihelp.prototype = Dihelp_proto;
Dihelp.prototype.constructor = Dihelp;

/* --- end generated code --- */
// -- user code here --

Dihelp.prototype.setText = function(temp)
{
	this.fTextcount1.text = _BONUS_OBTAIN[temp][0];
	this.fTextcount2.text = _BONUS_OBTAIN[temp][1];
	this.fTextcount3.text = _BONUS_OBTAIN[temp][2];

	this.fTextrule1.text = "Finish within " + _TIME_SCOPE[temp][1] + "min";
	this.fTextrule2.text = "Finish in " + _TIME_SCOPE[temp][1] + "-" + _TIME_SCOPE[temp][2] + "min";
	this.fTextrule3.text = "Finish over " + _TIME_SCOPE[temp][2] + "min";
};
Dihelp.prototype.start = function()
{
	this.alpha = 0;
	this.game.add.tween(this).to({alpha:1},300, Phaser.Easing.Linear.None,true);
	this.event = this.game.time.events.add(Phaser.Timer.SECOND*3, this.timeEventout, this);
};

Dihelp.prototype.timeEventout = function()
{
	_FX.Start(_FX.SE_POPUP_OFF);
	this.destroy();
	
};
Dihelp.prototype.timeEventRemove = function()
{
	
	this.game.time.events.remove(this.event);
	this.destroy();
};