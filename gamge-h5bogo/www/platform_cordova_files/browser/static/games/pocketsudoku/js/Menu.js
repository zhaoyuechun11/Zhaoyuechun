// -- user code here --
function _Class_SelectManager()  
{
	this.Group;
	this.Btn;
	this.BtnHelp;
}
/* --- start generated code --- */
// Generated by Phaser Editor 1.4.3 (Phaser v2.6.2)
/**
 * Menu.
 */
function Menu() {
	
	Phaser.State.call(this);
}
/** @type Phaser.State */
var Menu_proto = Object.create(Phaser.State.prototype);
Menu.prototype = Menu_proto;
Menu.prototype.constructor = Menu;

Menu.prototype.init = function () {
	
};
Menu.prototype.create = function () {
	// user code
	this.initObjects();
};
/* --- end generated code --- */
Menu.prototype.StartReplay = function() {
	this.fGroup.visible = true;
};
Menu.prototype.initObjects = function() {
	// public fields
	this.Helpprefab     = null;
	this.tutorialwindow = null;	
	this.s_Select  		= new Array(3);
	for(var i = 0; i < 3; i ++)this.s_Select[i] = new _Class_SelectManager();
	this.DEF=
	{
		SelectImage:
		{   
			BTNNAME:["EASY","NORMAL","HARD"],
			BTNHELPNAME:["helpeasy","helpnormal","helphard"],
			PosX:110, StartY:250, Step: 270,
			'0':'panel_level_easy', '1':'panel_level_normal', '2':'panel_level_hard' , 'key':'data01'				
		},		
	};	
	
	this.initGroup();	
	this.fGroupBtn.position.setTo(620,50);
	
	this.fBtn_tutorial = this.add.button(-50, 0, 'btn_icon', this.OnClickChangeWindow, this, null, 3, null, null,this.fGroupBtn);
	this.fBtn_tutorial.name = 'window_tutorial_title';
	this.fBtn_tutorial.anchor.setTo(0.5, 0.5);
	this.fBtn_tutorial.onInputDown.add(_BTN.ANI1, this);
	this.fBtn_tutorial.scale.setTo(0);
	
	this.fBtn_sound = this.add.button(50, 0, 'btn_icon', this.OnClickSound , this, null, 2, null, null,this.fGroupBtn);
	this.fBtn_sound.anchor.setTo(0.5, 0.5);
	this.fBtn_sound.scale.setTo(0);	
	
	this.fGroupSelect.visible = false;	
	this.Register_GroupBack();
	
	this.initTutorial();
	this.initSelect();
	
	if(_UserInfo.PlayRetry == true)
	{

		//this.fText_copyright.visible = false;

		this.tutorialwindow.setName("window_tutorial_select");
 
		this.fBtn_tutorial.name    ="window_tutorial_select";		
		this.fGroupSelect.alpha = 0;
		this.game.add.tween(this.fGroupSelect).to({	alpha : 1}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);		
		this.tutorialwindow.position.x = 1080;
		this.fGroupTitle.position.x    = -720;
		this.fGroupTitle.visible = false;
		this.tutorialwindow.visible = false;
		this.fGroupSelect.position.x   = 0;
		this.fGroupSelect.visible      = true;	
	}
	else
	{
		this.initTitle();
	}
	this.LoadUserInfo();
	// button on	
	this.game.add.tween(this.fBtn_sound.scale).to({	x:1,y:1}, 300, Phaser.Easing.Elastic.Out, true, 800, 0, false);
	this.game.add.tween(this.fBtn_tutorial.scale).to({	x:1,y:1}, 300, Phaser.Easing.Elastic.Out, true, 800, 0, false);

};
//,Phaser.Easing.Elastic.InSine

Menu.prototype.OffBtn = function()
{
	this.fBtn_sound.visible = false;
	this.fBtn_tutorial.visible = false;
};
Menu.prototype.OnBtn2 = function(temp)
{	
	this.fBtn_tutorial.visible = true;
	this.fBtn_sound.visible = true;

	this.fBtn_tutorial.scale.setTo(0);
	this.fBtn_sound.scale.setTo(0);

	this.game.add.tween(this.fBtn_sound.scale).to({	x:1,y:1}, 300, Phaser.Easing.Elastic.Out, true, 300, 0, false);
	this.game.add.tween(this.fBtn_tutorial.scale).to({	x:1,y:1}, 300, Phaser.Easing.Elastic.Out, true, 300, 0, false);
};
Menu.prototype.LoadUserInfo = function() 
{
	_UserInfo.TotalStar       = 0;
	_UserInfo.Grade           = 0;	
    _UserInfo.Nowlevel        = 0;
	_UserInfo.Time            = 0;
	Storage.Start();	
	
	if(_UserInfo.Sound == 'false')
	{
		if(_FX.enable = true)		_FX.Toggle(0, this.fBtn_sound);
	}
	this.initSound();
};
Menu.prototype.initGroup = function() 
{
	this.fGroup       = this.add.group();
	this.fGroupBack   = this.add.group(this.fGroup);	
	this.fGroupTitle  = this.add.group(this.fGroup);
	this.fGroupBtn    = this.add.group(this.fGroup);	
	this.fGroupSelect = this.add.group(this.fGroup);	
	this.fGroupSelect.position.setTo(720, 60);
	this.fGroupTitle.pivot.setTo(0.5, 0.5);	
};
Menu.prototype.Register_GroupBack = function() {
	
	this.fTitle_bg = this.add.sprite(360, 640, 'data03', 'title_bg', this.fGroupBack);	
	this.fTitle_bg.scale.setTo(2.0, 2.0);
	this.fTitle_bg.anchor.setTo(0.5, 0.5);

	this.UserInfo = new Window_User(this.game, this.fGroupBack );	
	this.UserInfo.position.setTo(10,10);
	this.UserInfo.visible = true;	
};
Menu.prototype.UserInfoOnOff = function() {
	
	var tween1 = this.game.add.tween(this.UserInfo.position).to({y : -200}, 200, Phaser.Easing.Linear.None, false, 0);
	var tween2 = this.game.add.tween(this.UserInfo.position).to({y : 10}, 200, Phaser.Easing.Linear.None,   false, 200);	
	tween1.chain(tween2);
	tween1.start();
};
Menu.prototype.initSelect = function() {		
	
	var tempspr;
	var temptext;
	var veticalValue = 147;
	tempspr = this.add.sprite(360, 600, 'popup_tutorial', null, this.fGroupSelect);
	tempspr.anchor.setTo(0.5, 0.5);

	temptext = this.game.add.sprite(360, 132,'data02', 'text_select_en', this.fGroupSelect);	
	temptext.anchor.setTo(0.5);
	
	for(var i = 0; i < 3; i ++)
	{
		this.s_Select[i].Group =  this.add.group(this.fGroupSelect);
		this.s_Select[i].Group.position.setTo(this.DEF.SelectImage.PosX,this.DEF.SelectImage.Step *i + this.DEF.SelectImage.StartY);
		
		this.add.tileSprite(0,0,502, 254, this.DEF.SelectImage.key,this.DEF.SelectImage[i],this.s_Select[i].Group);		

		this.s_Select[i].Btn = this.add.button(386, 170, 'btn_select', this.OnClickStartgame, this, null, i, null, null, this.s_Select[i].Group);
		this.s_Select[i].Btn.name = this.DEF.SelectImage.BTNNAME[i];
		this.s_Select[i].Btn.anchor.setTo(0.5);

		this.s_Select[i].BtnHelp= this.add.button(436, 57, 'data01', this.OnClickHelp, this, null, 'btn_info', null, null, this.s_Select[i].Group);
		this.s_Select[i].BtnHelp.name = this.DEF.SelectImage.BTNHELPNAME[i];
		this.s_Select[i].BtnHelp.anchor.setTo(0.5);		
		
		
		temptext = this.add.sprite(246, 58, "data02",_IMAGE_LOCALIZING.TEXT_SELECT_TITLE[i],this.s_Select[i].Group);				
		temptext.anchor.setTo(0.5);		
		
		veticalValue = 147;
		
		tempspr = this.add.sprite( 35, veticalValue,"data02","text_reward_en", this.s_Select[i].Group);
		tempspr.anchor.setTo(0,0.5);
		
		tempspr = this.add.sprite(180, veticalValue, 'data01', 'star', this.s_Select[i].Group);
		tempspr.anchor.setTo(0.5,0.5);		
		tempspr.scale.setTo(0.7, 0.7);
		
		var style = { font: "bold 26px", fill: "#602e0d",stroke:"#602e0d", strokeThickness:1},		
		temptext = this.add.text(270, veticalValue +2, _BONUS_OBTAIN[i][2]+"~"+ _BONUS_OBTAIN[i][0], style ,this.s_Select[i].Group);		
		temptext.anchor.setTo(1,0.5);
		
		veticalValue = 195;
		var Sec = Math.floor(_UserInfo.Besttime[i] % 60);
		var Min = Math.floor(_UserInfo.Besttime[i] / 60);
//		Min = 90*i;
		var formattedNumber = ("0" + Sec).slice(-2);	
		var text = Min + ":"+formattedNumber;		
		temptext = this.add.text(270, veticalValue+2, text,FontStyle.BEST, this.s_Select[i].Group);	
	    temptext.anchor.setTo(1,0.5);

		
		
		
		tempspr = this.add.sprite( 35, veticalValue,"data02","text_best_en",  this.s_Select[i].Group);
		tempspr.anchor.setTo(0,0.5);

		tempspr = this.add.sprite( 160, veticalValue,"data01","trophy_2",  this.s_Select[i].Group);
		tempspr.anchor.setTo(0.5,0.5);
		tempspr.scale.setTo(0.85, 0.85);
		
	    
		this.s_Select[i].BtnHelp.onInputDown.add(_BTN.ANI1, this);
	}
};

Menu.prototype.initSound = function() {
    _FX.Stop();
    _FX.Firststart();
};

Menu.prototype.Close_Turtorial = function(spr)
{	
	this.OnClickChangeWindow(spr);
};
Menu.prototype.initTutorial = function()
{
	this.tutorialwindow = new Window_Tutorial(this.game,this);	
	this.tutorialwindow.position.setTo(1080, 660);
	this.tutorialwindow.visible = false;
};
Menu.prototype.initTitle = function()
{
	//this.fText_copyright = this.add.text(360, 1275, 'Copyright â“’2018 Game Corp. All rights reserved\n',{ font: "bold 24px", fill: "#602e0d"});
	//this.fText_copyright.anchor.setTo(0.5);

	this.fText_mystar = this.add.text(0, 3, _UserInfo.TotalStar,FontStyle.C8);
	this.fText_mystar.anchor.setTo(0.5);
	this.fText_mystar.pivot.setTo(0,0.5);
	
	this.fText_mylevel = this.add.text(0, 3, _BONUS_OBTAIN.GRADE[_UserInfo.Grade],FontStyle.C8);
	this.fText_mylevel.anchor.setTo(0.5);

	this.fMy_grade = this.add.tileSprite(0, 0, 38, 46, 'grade', _UserInfo.Grade);
	this.fMy_grade.anchor.setTo(0.5, 0.5);
		
	
	this.fBtn_select = this.add.button(0, 0, 'data01', this.OnClickChangeWindow, this, null, 'btn_start', null, null);
	this.fBtn_select.name = 'window_title';
	this.fBtn_select.anchor.setTo(0.5, 0.5);	

	this.fSpine_Title = this.game.add.spine(360,640,"Title_spine");	
	this.fGroupTitle.add(this.fSpine_Title);
	//this.fGroupTitle.add(this.fText_copyright);


	var index         = this.fSpine_Title.skeleton.findSlotIndex("btn_start");
	var slotcontainer = this.fSpine_Title.slotContainers[index];	
	slotcontainer.addChild(this.fBtn_select);

	var index         = this.fSpine_Title.skeleton.findSlotIndex("banner");
	var slotcontainer = this.fSpine_Title.slotContainers[index];	
	slotcontainer.addChild(this.fMy_grade);

	var index         = this.fSpine_Title.skeleton.findSlotIndex("text_star_count");
	var slotcontainer = this.fSpine_Title.slotContainers[index];	
	slotcontainer.addChild(this.fText_mystar);

	var index         = this.fSpine_Title.skeleton.findSlotIndex("text_banner_color");
	var slotcontainer = this.fSpine_Title.slotContainers[index];	
	slotcontainer.addChild(this.fText_mylevel);
	
	this.fSpine_Title.setAnimationByName(0,"title_in",false);
	this.fSpine_Title.addAnimationByName(0,"title_idle",true);
	this.add.sprite(30, 30, 'data02', 'all', this.fGroupTitle);
};

Menu.prototype.DestoryHelpprefab = function() {
	if (this.Helpprefab != null) {
		this.Helpprefab.destroy();
		this.Helpprefab = null;
	}
};

Menu.prototype.OnClickSound = function(Sprite) {	
	_FX.Toggle(0, Sprite);
};

Menu.prototype.ClearState = function() 
{
	this.DestoryHelpprefab();	
	this.Helpprefab     = null;	
	this.tutorialwindow.destroy();	
	this.tutorialwindow = null;	

	this.UserInfo.destroy();

	this.Helpprefab     = null;
	this.fGroupBack.removeAll(true);	
	this.fGroupTitle.removeAll(true);
	this.fGroupBtn.removeAll(true);	
	this.fMy_grade.destroy(true,true);
	this.fBtn_select.destroy();	
	this.fGroupSelect.removeAll(true);	
	for(var i = 0; i < 3; i ++)
	{
		this.s_Select[i].Group.destroy(true);
	}
	this.fGroup.removeAll(true);

};
Menu.prototype.OnClickStartgame = function(Sprite) {
	
	if (_DEFINE.LEVEL[Sprite.name] != undefined) {
		this.ClearState();
		_UserInfo.Nowlevel = _DEFINE.LEVEL[Sprite.name];
		_FX.Stop();
		_FX.Start(_FX.SE_CLICK);
		this.TitleDestoy();
		this.game.state.start("Level",true);
	
	}
};
Menu.prototype.OnClickHelp = function(Sprite) {

	var x = 180, y = -300;
	var option = false;
	if (this.Helpprefab != null) 
	{
		if(this.Helpprefab.callname == Sprite.name) option = true;
		this.Helpprefab.timeEventRemove();		
	}
	if(!option)
	{
		switch (Sprite.name) {
			case 'helpeasy':
				this.Helpprefab = new Dihelp(this.game, this.s_Select[0].Group);
				this.Helpprefab.setText(0);
				this.fBtn_sound.inputEnabled = false;
				break;
			case 'helpnormal':
				this.Helpprefab = new Dihelp(this.game, this.s_Select[1].Group);
				this.Helpprefab.setText(1);		
				this.s_Select[0].Btn.inputEnabled = false;
				this.s_Select[0].BtnHelp.inputEnabled = false;
				break;
			case 'helphard':
				
				this.Helpprefab = new Dihelp(this.game, this.s_Select[2].Group);
				this.Helpprefab.setText(2);
				this.s_Select[1].Btn.inputEnabled = false;
				this.s_Select[1].BtnHelp.inputEnabled = false;
			break;
		}	
		this.Helpprefab.callname = Sprite.name;
		this.Helpprefab.position.setTo(x, y);
		this.Helpprefab.onDestroy.add(this.OnDestroyHelp, this);
		this.game.add.tween(this.Helpprefab).to({		y : y + 8	}, 300, Phaser.Easing.Linear.None, true, 300, -1, true);
	}
};

Menu.prototype.OnDestroyHelp = function(object) {
	this.Helpprefab = null;	
	this.fBtn_sound.inputEnabled = true;	
	this.s_Select[0].Btn.inputEnabled = true;
	this.s_Select[1].Btn.inputEnabled = true;	
	this.s_Select[0].BtnHelp.inputEnabled = true;
	this.s_Select[1].BtnHelp.inputEnabled = true;
};
Menu.prototype.OnClickSelect = function(object) {
		
	this.OpenSelect();
};
Menu.prototype.TitleOff = function()
{
	this.fGroupTitle.visible = false;
};

Menu.prototype.TitleDestoy = function()
{

	//this.fText_copyright.destroy();
	this.fSpine_Title.destroy();
	this.fGroupTitle.removeAll();
	
	this.fText_mystar = this.add.text(0, 3, _UserInfo.TotalStar,FontStyle.C8);
	this.fText_mystar.anchor.setTo(0.5);
	this.fText_mystar.pivot.setTo(0,0.5);
	
	this.fText_mylevel = this.add.text(0, 3, _BONUS_OBTAIN.GRADE[_UserInfo.Grade],FontStyle.C8);
	this.fText_mylevel.anchor.setTo(0.5);
	this.fGroupTitle.destroy(true);
};
Menu.prototype.CloseSelect = function()
{
	this.DestoryHelpprefab();
	this.game.add.tween(this.fGroupSelect).to({		x : -720	}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);
};
Menu.prototype.CloseTitle = function(option)
{
	this.OffBtn();
	var tween = this.game.add.tween(this.fGroupTitle).to({		x : -800	}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);
	if(option == 0)
	{
		tween.onComplete.addOnce(this.TitleOff,this);	
	}
};
Menu.prototype.CloseTutorialSelect = function()
{
	this.OffBtn();
	var tween = this.game.add.tween(this.tutorialwindow.position).to({		x : 1080	}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);
	tween.onComplete.addOnce(this.Offtutorial,this);
	tween.onComplete.add(this.OnBtn2,this);
};
Menu.prototype.CloseTutorialTitle = function()
{
	this.OffBtn();
	var tween = this.game.add.tween(this.tutorialwindow.position).to({		x : 1080	}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);
	tween.onComplete.addOnce(this.Offtutorial,this);
	tween.onComplete.add(this.OnBtn2,this);
};

Menu.prototype.Offtutorial = function()
{
	this.tutorialwindow.visible = false;
};

Menu.prototype.OnUserinfo = function()
{
	this.OnBtn2();
	this.UserInfo.visible = true;
};
Menu.prototype.OffUserinfo = function()
{
	this.UserInfo.visible = false;
};
Menu.prototype.OpenSelect = function()
{
	_FX.Start(_FX.SE_POPUP_ON);
	this.fGroupSelect.visible = true;	
	var tween  = this.game.add.tween(this.fGroupSelect).to({	x : 0}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);
	
	tween.onComplete.addOnce(this.OnEnableButton,this);
	tween.onComplete.add(this.OnUserinfo,this);
};
Menu.prototype.OpenTitle = function() {

	this.fGroupTitle.visible = true;
	var tween = this.game.add.tween(this.fGroupTitle).to({		x : 0	}, 300, Phaser.Easing.Elastic.OutSine, true, 0, 0, false);
	tween.onComplete.addOnce(this.OnEnableButton,this);
	tween.onComplete.add(this.OffUserinfo,this);
};
Menu.prototype.OpenTutorialTitle = function(object) {

	_FX.Start(_FX.SE_POPUP_ON);
	this.tutorialwindow.Reset_Position();
	this.tutorialwindow.visible = true;
	this.tutorialwindow.position.setTo(1080, 660);
	var tween  = this.game.add.tween(this.tutorialwindow.position).to({		x : 360	}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);
	tween.onComplete.addOnce(this.OnEnableButton,this);
	tween.onComplete.add(this.OnUserinfo,this);
};
Menu.prototype.OpenTutorialselect = function(object) {
	//1080
	_FX.Start(_FX.SE_POPUP_ON);
	this.OffBtn();
	this.tutorialwindow.Reset_Position();
	this.tutorialwindow.visible = true;
	this.tutorialwindow.position.setTo(1080, 660);
	var tween = this.game.add.tween(this.tutorialwindow.position).to({		x : 360	}, 300, Phaser.Easing.Bounce.OutSine, true, 0, 0, false);
	tween.onComplete.addOnce(this.OnEnableButton,this);
	tween.onComplete.add(this.OnUserinfo,this);
};
Menu.prototype.OnEnableButton = function(object) {

	this.buttonaction = true;
};
Menu.prototype.OnClickChangeWindow = function(object) {
	
	if(this.buttonaction == false)return;
	this.buttonaction = false;
	this.UserInfoOnOff();
	_FX.Start(_FX.SE_CLICK);
	switch(object.name)
	{
		case "window_title":
			this.OpenSelect();
			this.CloseTitle(1);
			this.tutorialwindow.setName("window_tutorial_select");
			this.fBtn_tutorial.name ="window_tutorial_select";
			break;
		case "window_tutorial_title":
			if(this.tutorialwindow.visible == false)
			{
				this.OpenTutorialTitle();
				this.CloseTitle();
			}
			else{
				
				this.OpenTitle(0);
				this.CloseTutorialTitle();
			}
			break;
		case "window_tutorial_select":
			if(this.tutorialwindow.visible == false)
			{
				this.OpenTutorialselect();
				this.CloseSelect();
			}
			else{

				this.OpenSelect();
				this.CloseTutorialTitle();
			}
			break;
		case "window_select":			

			this.tutorialwindow.setName("window_tutorial_select");
			this.fBtn_tutorial.name ="window_tutorial_select";
			this.OpenWindow(_DEFINE.WINDOW.SELECT);
			break;
	
	}	
};
